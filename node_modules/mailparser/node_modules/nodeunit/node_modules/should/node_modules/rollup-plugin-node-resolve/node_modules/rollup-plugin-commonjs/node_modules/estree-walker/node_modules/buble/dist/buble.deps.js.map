{"version":3,"file":"buble.deps.js","sources":["../node_modules/acorn/src/identifier.js","../node_modules/acorn/src/tokentype.js","../node_modules/acorn/src/whitespace.js","../node_modules/acorn/src/util.js","../node_modules/acorn/src/locutil.js","../node_modules/acorn/src/options.js","../node_modules/acorn/src/state.js","../node_modules/acorn/src/parseutil.js","../node_modules/acorn/src/statement.js","../node_modules/acorn/src/lval.js","../node_modules/acorn/src/expression.js","../node_modules/acorn/src/location.js","../node_modules/acorn/src/node.js","../node_modules/acorn/src/tokencontext.js","../node_modules/acorn/src/tokenize.js","../node_modules/acorn/src/index.js","../node_modules/vlq/src/vlq.js","../node_modules/magic-string/dist/magic-string.es6.js","../src/program/Node.js","../src/program/types/ArrayExpression.js","../src/utils/array.js","../src/program/types/ArrowFunctionExpression.js","../src/utils/locate.js","../src/utils/getSnippet.js","../src/utils/CompileError.js","../src/program/types/AssignmentExpression.js","../src/program/types/BinaryExpression.js","../src/program/types/BreakStatement.js","../src/program/types/CallExpression.js","../src/program/types/ClassBody.js","../src/utils/deindent.js","../src/program/types/ClassDeclaration.js","../src/program/types/ClassExpression.js","../src/program/types/ContinueStatement.js","../src/program/types/ExportDefaultDeclaration.js","../src/program/types/ExportNamedDeclaration.js","../src/program/extractNames.js","../src/program/types/shared/LoopStatement.js","../src/program/types/ForStatement.js","../src/program/types/ForInStatement.js","../src/program/types/ForOfStatement.js","../src/program/types/FunctionDeclaration.js","../src/program/types/FunctionExpression.js","../src/utils/isReference.js","../src/program/types/Identifier.js","../src/program/types/ImportDeclaration.js","../src/program/types/ImportDefaultSpecifier.js","../src/program/types/ImportSpecifier.js","../src/program/types/Literal.js","../src/utils/reserved.js","../src/program/types/MemberExpression.js","../src/program/types/Property.js","../src/program/types/ReturnStatement.js","../src/program/types/Super.js","../src/program/types/TaggedTemplateExpression.js","../src/program/types/TemplateElement.js","../src/program/types/TemplateLiteral.js","../src/program/types/ThisExpression.js","../src/program/types/UpdateExpression.js","../src/program/types/VariableDeclaration.js","../src/program/types/VariableDeclarator.js","../src/program/types/index.js","../src/program/wrap.js","../src/program/Scope.js","../src/program/BlockStatement.js","../src/program/Program.js","../src/support.js","../package.json","../src/index.js"],"sourcesContent":["// Reserved word lists for various dialects of the language\n\nexport const reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  7: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n}\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"\n\nexport const keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n}\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0-\\u08b4\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fd5\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ad\\ua7b0-\\ua7b7\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\"\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d01-\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf8\\u1cf9\\u1dc0-\\u1df5\\u1dfc-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\"\n\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\")\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\")\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,17,26,6,37,11,29,3,35,5,7,2,4,43,157,99,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,26,45,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,785,52,76,44,33,24,27,35,42,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,287,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,25,391,63,32,0,449,56,1288,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,881,68,12,0,67,12,16481,1,3071,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,1340,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,10591,541]\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,1306,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,52,0,13,2,49,13,10,2,4,9,83,11,168,11,6,9,7,3,57,0,2,6,3,1,3,2,10,0,11,1,3,6,4,4,316,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,423,9,20855,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,3617,6,792618,239]\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code, astral) {\n  if (code < 65) return code === 36\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code, astral) {\n  if (code < 48) return code === 36\n  if (code < 58) return true\n  if (code < 65) return false\n  if (code < 91) return true\n  if (code < 97) return code === 95\n  if (code < 123) return true\n  if (code <= 0xffff) return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code))\n  if (astral === false) return false\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n","// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nexport class TokenType {\n  constructor(label, conf = {}) {\n    this.label = label\n    this.keyword = conf.keyword\n    this.beforeExpr = !!conf.beforeExpr\n    this.startsExpr = !!conf.startsExpr\n    this.isLoop = !!conf.isLoop\n    this.isAssign = !!conf.isAssign\n    this.prefix = !!conf.prefix\n    this.postfix = !!conf.postfix\n    this.binop = conf.binop || null\n    this.updateContext = null\n  }\n}\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nconst beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true}\n\nexport const types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"prefix\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=\", 6),\n  relational: binop(\"</>\", 7),\n  bitShift: binop(\"<</>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true})\n}\n\n// Map keyword names to token types.\n\nexport const keywords = {}\n\n// Succinct definitions of keyword token types\nfunction kw(name, options = {}) {\n  options.keyword = name\n  keywords[name] = types[\"_\" + name] = new TokenType(name, options)\n}\n\nkw(\"break\")\nkw(\"case\", beforeExpr)\nkw(\"catch\")\nkw(\"continue\")\nkw(\"debugger\")\nkw(\"default\", beforeExpr)\nkw(\"do\", {isLoop: true, beforeExpr: true})\nkw(\"else\", beforeExpr)\nkw(\"finally\")\nkw(\"for\", {isLoop: true})\nkw(\"function\", startsExpr)\nkw(\"if\")\nkw(\"return\", beforeExpr)\nkw(\"switch\")\nkw(\"throw\", beforeExpr)\nkw(\"try\")\nkw(\"var\")\nkw(\"const\")\nkw(\"while\", {isLoop: true})\nkw(\"with\")\nkw(\"new\", {beforeExpr: true, startsExpr: true})\nkw(\"this\", startsExpr)\nkw(\"super\", startsExpr)\nkw(\"class\")\nkw(\"extends\", beforeExpr)\nkw(\"export\")\nkw(\"import\")\nkw(\"null\", startsExpr)\nkw(\"true\", startsExpr)\nkw(\"false\", startsExpr)\nkw(\"in\", {beforeExpr: true, binop: 7})\nkw(\"instanceof\", {beforeExpr: true, binop: 7})\nkw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true})\nkw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true})\nkw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n","// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nexport const lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\")\n\nexport function isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code == 0x2029\n}\n\nexport const nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n","export function isArray(obj) {\n  return Object.prototype.toString.call(obj) === \"[object Array]\"\n}\n\n// Checks if an object has a property.\n\nexport function has(obj, propName) {\n  return Object.prototype.hasOwnProperty.call(obj, propName)\n}\n","import {lineBreakG} from \"./whitespace\"\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  constructor(line, col) {\n    this.line = line\n    this.column = col\n  }\n\n  offset(n) {\n    return new Position(this.line, this.column + n)\n  }\n}\n\nexport class SourceLocation {\n  constructor(p, start, end) {\n    this.start = start\n    this.end = end\n    if (p.sourceFile !== null) this.source = p.sourceFile\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input, offset) {\n  for (let line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur\n    let match = lineBreakG.exec(input)\n    if (match && match.index < offset) {\n      ++line\n      cur = match.index + match[0].length\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n","import {has, isArray} from \"./util\"\nimport {SourceLocation} from \"./locutil\"\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport const defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, or 5, or 6. This influences support for strict\n  // mode, the set of reserved words, support for getters and\n  // setters and other features. The default is 6.\n  ecmaVersion: 6,\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n}\n\n// Interpret and default an options object\n\nexport function getOptions(opts) {\n  let options = {}\n  for (let opt in defaultOptions)\n    options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]\n  if (options.allowReserved == null)\n    options.allowReserved = options.ecmaVersion < 5\n\n  if (isArray(options.onToken)) {\n    let tokens = options.onToken\n    options.onToken = (token) => tokens.push(token)\n  }\n  if (isArray(options.onComment))\n    options.onComment = pushComment(options, options.onComment)\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function (block, text, start, end, startLoc, endLoc) {\n    let comment = {\n      type: block ? 'Block' : 'Line',\n      value: text,\n      start: start,\n      end: end\n    }\n    if (options.locations)\n      comment.loc = new SourceLocation(this, startLoc, endLoc)\n    if (options.ranges)\n      comment.range = [start, end]\n    array.push(comment)\n  }\n}\n\n","import {reservedWords, keywords} from \"./identifier\"\nimport {types as tt} from \"./tokentype\"\nimport {lineBreak} from \"./whitespace\"\nimport {getOptions} from \"./options\"\n\n// Registered plugins\nexport const plugins = {}\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nexport class Parser {\n  constructor(options, input, startPos) {\n    this.options = options = getOptions(options)\n    this.sourceFile = options.sourceFile\n    this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5])\n    let reserved = options.allowReserved ? \"\" :\n        reservedWords[options.ecmaVersion] + (options.sourceType == \"module\" ? \" await\" : \"\")\n    this.reservedWords = keywordRegexp(reserved)\n    let reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict\n    this.reservedWordsStrict = keywordRegexp(reservedStrict)\n    this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind)\n    this.input = String(input)\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false\n\n    // Load plugins\n    this.loadPlugins(options.plugins)\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos\n      this.lineStart = Math.max(0, this.input.lastIndexOf(\"\\n\", startPos))\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length\n    } else {\n      this.pos = this.lineStart = 0\n      this.curLine = 1\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = tt.eof\n    // For tokens that include more information than their type, the value\n    this.value = null\n    // Its start and end offset\n    this.start = this.end = this.pos\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition()\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null\n    this.lastTokStart = this.lastTokEnd = this.pos\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext()\n    this.exprAllowed = true\n\n    // Figure out if it's a module code.\n    this.strict = this.inModule = options.sourceType === \"module\"\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1\n\n    // Flags to track whether we are in a function, a generator.\n    this.inFunction = this.inGenerator = false\n    // Labels in scope.\n    this.labels = []\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === '#!')\n      this.skipLineComment(2)\n  }\n\n  // DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\n  isKeyword(word) { return this.keywords.test(word) }\n  isReservedWord(word) { return this.reservedWords.test(word) }\n\n  extend(name, f) {\n    this[name] = f(this[name])\n  }\n\n  loadPlugins(pluginConfigs) {\n    for (let name in pluginConfigs) {\n      let plugin = plugins[name]\n      if (!plugin) throw new Error(\"Plugin '\" + name + \"' not found\")\n      plugin(this, pluginConfigs[name])\n    }\n  }\n\n  parse() {\n    let node = this.options.program || this.startNode()\n    this.nextToken()\n    return this.parseTopLevel(node)\n  }\n}\n","import {types as tt} from \"./tokentype\"\nimport {Parser} from \"./state\"\nimport {lineBreak} from \"./whitespace\"\n\nconst pp = Parser.prototype\n\n// ## Parser utilities\n\n// Test whether a statement node is the string literal `\"use strict\"`.\n\npp.isUseStrict = function(stmt) {\n  return this.options.ecmaVersion >= 5 && stmt.type === \"ExpressionStatement\" &&\n    stmt.expression.type === \"Literal\" &&\n    stmt.expression.raw.slice(1, -1) === \"use strict\"\n}\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next()\n    return true\n  } else {\n    return false\n  }\n}\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === tt.name && this.value === name\n}\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  return this.value === name && this.eat(tt.name)\n}\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) this.unexpected()\n}\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === tt.eof ||\n    this.type === tt.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n}\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc)\n    return true\n  }\n}\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(tt.semi) && !this.insertSemicolon()) this.unexpected()\n}\n\npp.afterTrailingComma = function(tokType) {\n  if (this.type == tokType) {\n    if (this.options.onTrailingComma)\n      this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc)\n    this.next()\n    return true\n  }\n}\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected()\n}\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\")\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, andThrow) {\n  let pos = refDestructuringErrors && refDestructuringErrors.trailingComma\n  if (!andThrow) return !!pos\n  if (pos) this.raise(pos, \"Comma is not permitted after the rest element\")\n}\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  let pos = refDestructuringErrors && refDestructuringErrors.shorthandAssign\n  if (!andThrow) return !!pos\n  if (pos) this.raise(pos, \"Shorthand property assignments are valid only in destructuring patterns\")\n}\n","import {types as tt} from \"./tokentype\"\nimport {Parser} from \"./state\"\nimport {lineBreak, skipWhiteSpace} from \"./whitespace\"\nimport {isIdentifierStart, isIdentifierChar} from \"./identifier\"\n\nconst pp = Parser.prototype\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp.parseTopLevel = function(node) {\n  let first = true\n  if (!node.body) node.body = []\n  while (this.type !== tt.eof) {\n    let stmt = this.parseStatement(true, true)\n    node.body.push(stmt)\n    if (first) {\n      if (this.isUseStrict(stmt)) this.setStrict(true)\n      first = false\n    }\n  }\n  this.next()\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType\n  }\n  return this.finishNode(node, \"Program\")\n}\n\nconst loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"}\n\npp.isLet = function() {\n  if (this.type !== tt.name || this.options.ecmaVersion < 6 || this.value != \"let\") return false\n  skipWhiteSpace.lastIndex = this.pos\n  let skip = skipWhiteSpace.exec(this.input)\n  let next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next)\n  if (nextCh === 91 || nextCh == 123) return true // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    for (var pos = next + 1; isIdentifierChar(this.input.charCodeAt(pos, true)); ++pos) {}\n    let ident = this.input.slice(next, pos)\n    if (!this.isKeyword(ident)) return true\n  }\n  return false\n}\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp.parseStatement = function(declaration, topLevel) {\n  let starttype = this.type, node = this.startNode(), kind\n\n  if (this.isLet()) {\n    starttype = tt._var\n    kind = \"let\"\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case tt._break: case tt._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case tt._debugger: return this.parseDebuggerStatement(node)\n  case tt._do: return this.parseDoStatement(node)\n  case tt._for: return this.parseForStatement(node)\n  case tt._function:\n    if (!declaration && this.options.ecmaVersion >= 6) this.unexpected()\n    return this.parseFunctionStatement(node)\n  case tt._class:\n    if (!declaration) this.unexpected()\n    return this.parseClass(node, true)\n  case tt._if: return this.parseIfStatement(node)\n  case tt._return: return this.parseReturnStatement(node)\n  case tt._switch: return this.parseSwitchStatement(node)\n  case tt._throw: return this.parseThrowStatement(node)\n  case tt._try: return this.parseTryStatement(node)\n  case tt._const: case tt._var:\n    kind = kind || this.value\n    if (!declaration && kind != \"var\") this.unexpected()\n    return this.parseVarStatement(node, kind)\n  case tt._while: return this.parseWhileStatement(node)\n  case tt._with: return this.parseWithStatement(node)\n  case tt.braceL: return this.parseBlock()\n  case tt.semi: return this.parseEmptyStatement(node)\n  case tt._export:\n  case tt._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        this.raise(this.start, \"'import' and 'export' may only appear at the top level\")\n      if (!this.inModule)\n        this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\")\n    }\n    return starttype === tt._import ? this.parseImport(node) : this.parseExport(node)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    let maybeName = this.value, expr = this.parseExpression()\n    if (starttype === tt.name && expr.type === \"Identifier\" && this.eat(tt.colon))\n      return this.parseLabeledStatement(node, maybeName, expr)\n    else return this.parseExpressionStatement(node, expr)\n  }\n}\n\npp.parseBreakContinueStatement = function(node, keyword) {\n  let isBreak = keyword == \"break\"\n  this.next()\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.label = null\n  else if (this.type !== tt.name) this.unexpected()\n  else {\n    node.label = this.parseIdent()\n    this.semicolon()\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  for (var i = 0; i < this.labels.length; ++i) {\n    let lab = this.labels[i]\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break\n      if (node.label && isBreak) break\n    }\n  }\n  if (i === this.labels.length) this.raise(node.start, \"Unsyntactic \" + keyword)\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n}\n\npp.parseDebuggerStatement = function(node) {\n  this.next()\n  this.semicolon()\n  return this.finishNode(node, \"DebuggerStatement\")\n}\n\npp.parseDoStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  this.expect(tt._while)\n  node.test = this.parseParenExpression()\n  if (this.options.ecmaVersion >= 6)\n    this.eat(tt.semi)\n  else\n    this.semicolon()\n  return this.finishNode(node, \"DoWhileStatement\")\n}\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp.parseForStatement = function(node) {\n  this.next()\n  this.labels.push(loopLabel)\n  this.expect(tt.parenL)\n  if (this.type === tt.semi) return this.parseFor(node, null)\n  let isLet = this.isLet()\n  if (this.type === tt._var || this.type === tt._const || isLet) {\n    let init = this.startNode(), kind = isLet ? \"let\" : this.value\n    this.next()\n    this.parseVar(init, true, kind)\n    this.finishNode(init, \"VariableDeclaration\")\n    if ((this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init.declarations.length === 1 &&\n        !(kind !== \"var\" && init.declarations[0].init))\n      return this.parseForIn(node, init)\n    return this.parseFor(node, init)\n  }\n  let refDestructuringErrors = {shorthandAssign: 0, trailingComma: 0}\n  let init = this.parseExpression(true, refDestructuringErrors)\n  if (this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    this.checkPatternErrors(refDestructuringErrors, true)\n    this.toAssignable(init)\n    this.checkLVal(init)\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return this.parseFor(node, init)\n}\n\npp.parseFunctionStatement = function(node) {\n  this.next()\n  return this.parseFunction(node, true)\n}\n\npp.parseIfStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  node.consequent = this.parseStatement(false)\n  node.alternate = this.eat(tt._else) ? this.parseStatement(false) : null\n  return this.finishNode(node, \"IfStatement\")\n}\n\npp.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    this.raise(this.start, \"'return' outside of function\")\n  this.next()\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(tt.semi) || this.insertSemicolon()) node.argument = null\n  else { node.argument = this.parseExpression(); this.semicolon() }\n  return this.finishNode(node, \"ReturnStatement\")\n}\n\npp.parseSwitchStatement = function(node) {\n  this.next()\n  node.discriminant = this.parseParenExpression()\n  node.cases = []\n  this.expect(tt.braceL)\n  this.labels.push(switchLabel)\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  for (var cur, sawDefault = false; this.type != tt.braceR;) {\n    if (this.type === tt._case || this.type === tt._default) {\n      let isCase = this.type === tt._case\n      if (cur) this.finishNode(cur, \"SwitchCase\")\n      node.cases.push(cur = this.startNode())\n      cur.consequent = []\n      this.next()\n      if (isCase) {\n        cur.test = this.parseExpression()\n      } else {\n        if (sawDefault) this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\")\n        sawDefault = true\n        cur.test = null\n      }\n      this.expect(tt.colon)\n    } else {\n      if (!cur) this.unexpected()\n      cur.consequent.push(this.parseStatement(true))\n    }\n  }\n  if (cur) this.finishNode(cur, \"SwitchCase\")\n  this.next() // Closing brace\n  this.labels.pop()\n  return this.finishNode(node, \"SwitchStatement\")\n}\n\npp.parseThrowStatement = function(node) {\n  this.next()\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    this.raise(this.lastTokEnd, \"Illegal newline after throw\")\n  node.argument = this.parseExpression()\n  this.semicolon()\n  return this.finishNode(node, \"ThrowStatement\")\n}\n\n// Reused empty array added for node fields that are always empty.\n\nconst empty = []\n\npp.parseTryStatement = function(node) {\n  this.next()\n  node.block = this.parseBlock()\n  node.handler = null\n  if (this.type === tt._catch) {\n    let clause = this.startNode()\n    this.next()\n    this.expect(tt.parenL)\n    clause.param = this.parseBindingAtom()\n    this.checkLVal(clause.param, true)\n    this.expect(tt.parenR)\n    clause.body = this.parseBlock()\n    node.handler = this.finishNode(clause, \"CatchClause\")\n  }\n  node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null\n  if (!node.handler && !node.finalizer)\n    this.raise(node.start, \"Missing catch or finally clause\")\n  return this.finishNode(node, \"TryStatement\")\n}\n\npp.parseVarStatement = function(node, kind) {\n  this.next()\n  this.parseVar(node, false, kind)\n  this.semicolon()\n  return this.finishNode(node, \"VariableDeclaration\")\n}\n\npp.parseWhileStatement = function(node) {\n  this.next()\n  node.test = this.parseParenExpression()\n  this.labels.push(loopLabel)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"WhileStatement\")\n}\n\npp.parseWithStatement = function(node) {\n  if (this.strict) this.raise(this.start, \"'with' in strict mode\")\n  this.next()\n  node.object = this.parseParenExpression()\n  node.body = this.parseStatement(false)\n  return this.finishNode(node, \"WithStatement\")\n}\n\npp.parseEmptyStatement = function(node) {\n  this.next()\n  return this.finishNode(node, \"EmptyStatement\")\n}\n\npp.parseLabeledStatement = function(node, maybeName, expr) {\n  for (let i = 0; i < this.labels.length; ++i)\n    if (this.labels[i].name === maybeName) this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\")\n  let kind = this.type.isLoop ? \"loop\" : this.type === tt._switch ? \"switch\" : null\n  for (let i = this.labels.length - 1; i >= 0; i--) {\n    let label = this.labels[i]\n    if (label.statementStart == node.start) {\n      label.statementStart = this.start\n      label.kind = kind\n    } else break\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start})\n  node.body = this.parseStatement(true)\n  this.labels.pop()\n  node.label = expr\n  return this.finishNode(node, \"LabeledStatement\")\n}\n\npp.parseExpressionStatement = function(node, expr) {\n  node.expression = expr\n  this.semicolon()\n  return this.finishNode(node, \"ExpressionStatement\")\n}\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp.parseBlock = function(allowStrict) {\n  let node = this.startNode(), first = true, oldStrict\n  node.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    let stmt = this.parseStatement(true)\n    node.body.push(stmt)\n    if (first && allowStrict && this.isUseStrict(stmt)) {\n      oldStrict = this.strict\n      this.setStrict(this.strict = true)\n    }\n    first = false\n  }\n  if (oldStrict === false) this.setStrict(false)\n  return this.finishNode(node, \"BlockStatement\")\n}\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp.parseFor = function(node, init) {\n  node.init = init\n  this.expect(tt.semi)\n  node.test = this.type === tt.semi ? null : this.parseExpression()\n  this.expect(tt.semi)\n  node.update = this.type === tt.parenR ? null : this.parseExpression()\n  this.expect(tt.parenR)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, \"ForStatement\")\n}\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp.parseForIn = function(node, init) {\n  let type = this.type === tt._in ? \"ForInStatement\" : \"ForOfStatement\"\n  this.next()\n  node.left = init\n  node.right = this.parseExpression()\n  this.expect(tt.parenR)\n  node.body = this.parseStatement(false)\n  this.labels.pop()\n  return this.finishNode(node, type)\n}\n\n// Parse a list of variable declarations.\n\npp.parseVar = function(node, isFor, kind) {\n  node.declarations = []\n  node.kind = kind\n  for (;;) {\n    let decl = this.startNode()\n    this.parseVarId(decl)\n    if (this.eat(tt.eq)) {\n      decl.init = this.parseMaybeAssign(isFor)\n    } else if (kind === \"const\" && !(this.type === tt._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected()\n    } else if (decl.id.type != \"Identifier\" && !(isFor && (this.type === tt._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\")\n    } else {\n      decl.init = null\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"))\n    if (!this.eat(tt.comma)) break\n  }\n  return node\n}\n\npp.parseVarId = function(decl) {\n  decl.id = this.parseBindingAtom()\n  this.checkLVal(decl.id, true)\n}\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseFunction = function(node, isStatement, allowExpressionBody) {\n  this.initFunction(node)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = this.eat(tt.star)\n  var oldInGen = this.inGenerator\n  this.inGenerator = node.generator\n  if (isStatement || this.type === tt.name)\n    node.id = this.parseIdent()\n  this.parseFunctionParams(node)\n  this.parseFunctionBody(node, allowExpressionBody)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n}\n\npp.parseFunctionParams = function(node) {\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, false, true)\n}\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp.parseClass = function(node, isStatement) {\n  this.next()\n  this.parseClassId(node, isStatement)\n  this.parseClassSuper(node)\n  let classBody = this.startNode()\n  let hadConstructor = false\n  classBody.body = []\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (this.eat(tt.semi)) continue\n    let method = this.startNode()\n    let isGenerator = this.eat(tt.star)\n    let isMaybeStatic = this.type === tt.name && this.value === \"static\"\n    this.parsePropertyName(method)\n    method.static = isMaybeStatic && this.type !== tt.parenL\n    if (method.static) {\n      if (isGenerator) this.unexpected()\n      isGenerator = this.eat(tt.star)\n      this.parsePropertyName(method)\n    }\n    method.kind = \"method\"\n    let isGetSet = false\n    if (!method.computed) {\n      let {key} = method\n      if (!isGenerator && key.type === \"Identifier\" && this.type !== tt.parenL && (key.name === \"get\" || key.name === \"set\")) {\n        isGetSet = true\n        method.kind = key.name\n        key = this.parsePropertyName(method)\n      }\n      if (!method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n          key.type === \"Literal\" && key.value === \"constructor\")) {\n        if (hadConstructor) this.raise(key.start, \"Duplicate constructor in the same class\")\n        if (isGetSet) this.raise(key.start, \"Constructor can't have get/set modifier\")\n        if (isGenerator) this.raise(key.start, \"Constructor can't be a generator\")\n        method.kind = \"constructor\"\n        hadConstructor = true\n      }\n    }\n    this.parseClassMethod(classBody, method, isGenerator)\n    if (isGetSet) {\n      let paramCount = method.kind === \"get\" ? 0 : 1\n      if (method.value.params.length !== paramCount) {\n        let start = method.value.start\n        if (method.kind === \"get\")\n          this.raiseRecoverable(start, \"getter should have no params\")\n        else\n          this.raiseRecoverable(start, \"setter should have exactly one param\")\n      }\n      if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n        this.raise(method.value.params[0].start, \"Setter cannot use rest params\")\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\")\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n}\n\npp.parseClassMethod = function(classBody, method, isGenerator) {\n  method.value = this.parseMethod(isGenerator)\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"))\n}\n\npp.parseClassId = function(node, isStatement) {\n  node.id = this.type === tt.name ? this.parseIdent() : isStatement ? this.unexpected() : null\n}\n\npp.parseClassSuper = function(node) {\n  node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null\n}\n\n// Parses module export declaration.\n\npp.parseExport = function(node) {\n  this.next()\n  // export * from '...'\n  if (this.eat(tt.star)) {\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    this.semicolon()\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tt._default)) { // export default ...\n    let parens = this.type == tt.parenL\n    let expr = this.parseMaybeAssign()\n    let needsSemi = true\n    if (!parens && (expr.type == \"FunctionExpression\" ||\n                    expr.type == \"ClassExpression\")) {\n      needsSemi = false\n      if (expr.id) {\n        expr.type = expr.type == \"FunctionExpression\"\n          ? \"FunctionDeclaration\"\n          : \"ClassDeclaration\"\n      }\n    }\n    node.declaration = expr\n    if (needsSemi) this.semicolon()\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true)\n    node.specifiers = []\n    node.source = null\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null\n    node.specifiers = this.parseExportSpecifiers()\n    if (this.eatContextual(\"from\")) {\n      node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n    } else {\n      // check for keywords used as local names\n      for (let i = 0; i < node.specifiers.length; i++) {\n        if (this.keywords.test(node.specifiers[i].local.name) || this.reservedWords.test(node.specifiers[i].local.name)) {\n          this.unexpected(node.specifiers[i].local.start)\n        }\n      }\n\n      node.source = null\n    }\n    this.semicolon()\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n}\n\npp.shouldParseExportStatement = function() {\n  return this.type.keyword || this.isLet()\n}\n\n// Parses a comma-separated list of module exports.\n\npp.parseExportSpecifiers = function() {\n  let nodes = [], first = true\n  // export { x, y as z } [from '...']\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma)\n      if (this.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    let node = this.startNode()\n    node.local = this.parseIdent(this.type === tt._default)\n    node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"))\n  }\n  return nodes\n}\n\n// Parses import declaration.\n\npp.parseImport = function(node) {\n  this.next()\n  // import '...'\n  if (this.type === tt.string) {\n    node.specifiers = empty\n    node.source = this.parseExprAtom()\n  } else {\n    node.specifiers = this.parseImportSpecifiers()\n    this.expectContextual(\"from\")\n    node.source = this.type === tt.string ? this.parseExprAtom() : this.unexpected()\n  }\n  this.semicolon()\n  return this.finishNode(node, \"ImportDeclaration\")\n}\n\n// Parses a comma-separated list of module imports.\n\npp.parseImportSpecifiers = function() {\n  let nodes = [], first = true\n  if (this.type === tt.name) {\n    // import defaultObj, { x, y as z } from '...'\n    let node = this.startNode()\n    node.local = this.parseIdent()\n    this.checkLVal(node.local, true)\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"))\n    if (!this.eat(tt.comma)) return nodes\n  }\n  if (this.type === tt.star) {\n    let node = this.startNode()\n    this.next()\n    this.expectContextual(\"as\")\n    node.local = this.parseIdent()\n    this.checkLVal(node.local, true)\n    nodes.push(this.finishNode(node, \"ImportNamespaceSpecifier\"))\n    return nodes\n  }\n  this.expect(tt.braceL)\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma)\n      if (this.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    let node = this.startNode()\n    node.imported = this.parseIdent(true)\n    if (this.eatContextual(\"as\")) {\n      node.local = this.parseIdent()\n    } else {\n      node.local = node.imported\n      if (this.isKeyword(node.local.name)) this.unexpected(node.local.start)\n      if (this.reservedWordsStrict.test(node.local.name)) this.raise(node.local.start, \"The keyword '\" + node.local.name + \"' is reserved\")\n    }\n    this.checkLVal(node.local, true)\n    nodes.push(this.finishNode(node, \"ImportSpecifier\"))\n  }\n  return nodes\n}\n","import {types as tt} from \"./tokentype\"\nimport {Parser} from \"./state\"\nimport {has} from \"./util\"\n\nconst pp = Parser.prototype\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp.toAssignable = function(node, isBinding) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\"\n      for (let i = 0; i < node.properties.length; i++) {\n        let prop = node.properties[i]\n        if (prop.kind !== \"init\") this.raise(prop.key.start, \"Object pattern can't contain getter or setter\")\n        this.toAssignable(prop.value, isBinding)\n      }\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\"\n      this.toAssignableList(node.elements, isBinding)\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator === \"=\") {\n        node.type = \"AssignmentPattern\"\n        delete node.operator\n        // falls through to AssignmentPattern\n      } else {\n        this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\")\n        break\n      }\n\n    case \"AssignmentPattern\":\n      if (node.right.type === \"YieldExpression\")\n        this.raise(node.right.start, \"Yield expression cannot be a default value\")\n      break\n\n    case \"ParenthesizedExpression\":\n      node.expression = this.toAssignable(node.expression, isBinding)\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) break\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\")\n    }\n  }\n  return node\n}\n\n// Convert list of expression atoms to binding list.\n\npp.toAssignableList = function(exprList, isBinding) {\n  let end = exprList.length\n  if (end) {\n    let last = exprList[end - 1]\n    if (last && last.type == \"RestElement\") {\n      --end\n    } else if (last && last.type == \"SpreadElement\") {\n      last.type = \"RestElement\"\n      let arg = last.argument\n      this.toAssignable(arg, isBinding)\n      if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\")\n        this.unexpected(arg.start)\n      --end\n    }\n\n    if (isBinding && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      this.unexpected(last.argument.start)\n  }\n  for (let i = 0; i < end; i++) {\n    let elt = exprList[i]\n    if (elt) this.toAssignable(elt, isBinding)\n  }\n  return exprList\n}\n\n// Parses spread element.\n\npp.parseSpread = function(refDestructuringErrors) {\n  let node = this.startNode()\n  this.next()\n  node.argument = this.parseMaybeAssign(refDestructuringErrors)\n  return this.finishNode(node, \"SpreadElement\")\n}\n\npp.parseRest = function(allowNonIdent) {\n  let node = this.startNode()\n  this.next()\n\n  // RestElement inside of a function parameter must be an identifier\n  if (allowNonIdent) node.argument = this.type === tt.name ? this.parseIdent() : this.unexpected()\n  else node.argument = this.type === tt.name || this.type === tt.bracketL ? this.parseBindingAtom() : this.unexpected()\n\n  return this.finishNode(node, \"RestElement\")\n}\n\n// Parses lvalue (assignable) atom.\n\npp.parseBindingAtom = function() {\n  if (this.options.ecmaVersion < 6) return this.parseIdent()\n  switch (this.type) {\n  case tt.name:\n    return this.parseIdent()\n\n  case tt.bracketL:\n    let node = this.startNode()\n    this.next()\n    node.elements = this.parseBindingList(tt.bracketR, true, true)\n    return this.finishNode(node, \"ArrayPattern\")\n\n  case tt.braceL:\n    return this.parseObj(true)\n\n  default:\n    this.unexpected()\n  }\n}\n\npp.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowNonIdent) {\n  let elts = [], first = true\n  while (!this.eat(close)) {\n    if (first) first = false\n    else this.expect(tt.comma)\n    if (allowEmpty && this.type === tt.comma) {\n      elts.push(null)\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === tt.ellipsis) {\n      let rest = this.parseRest(allowNonIdent)\n      this.parseBindingListItem(rest)\n      elts.push(rest)\n      if (this.type === tt.comma) this.raise(this.start, \"Comma is not permitted after the rest element\")\n      this.expect(close)\n      break\n    } else {\n      let elem = this.parseMaybeDefault(this.start, this.startLoc)\n      this.parseBindingListItem(elem)\n      elts.push(elem)\n    }\n  }\n  return elts\n}\n\npp.parseBindingListItem = function(param) {\n  return param\n}\n\n// Parses assignment pattern around given atom if possible.\n\npp.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom()\n  if (this.options.ecmaVersion < 6 || !this.eat(tt.eq)) return left\n  let node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.right = this.parseMaybeAssign()\n  return this.finishNode(node, \"AssignmentPattern\")\n}\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n\npp.checkLVal = function(expr, isBinding, checkClashes) {\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      this.raiseRecoverable(expr.start, (isBinding ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\")\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        this.raiseRecoverable(expr.start, \"Argument name clash\")\n      checkClashes[expr.name] = true\n    }\n    break\n\n  case \"MemberExpression\":\n    if (isBinding) this.raiseRecoverable(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" member expression\")\n    break\n\n  case \"ObjectPattern\":\n    for (let i = 0; i < expr.properties.length; i++)\n      this.checkLVal(expr.properties[i].value, isBinding, checkClashes)\n    break\n\n  case \"ArrayPattern\":\n    for (let i = 0; i < expr.elements.length; i++) {\n      let elem = expr.elements[i]\n      if (elem) this.checkLVal(elem, isBinding, checkClashes)\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, isBinding, checkClashes)\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, isBinding, checkClashes)\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, isBinding, checkClashes)\n    break\n\n  default:\n    this.raise(expr.start, (isBinding ? \"Binding\" : \"Assigning to\") + \" rvalue\")\n  }\n}\n","// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport {types as tt} from \"./tokentype\"\nimport {Parser} from \"./state\"\n\nconst pp = Parser.prototype\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp.checkPropClash = function(prop, propHash) {\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    return\n  let {key} = prop, name\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  let {kind} = prop\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\")\n      propHash.proto = true\n    }\n    return\n  }\n  name = \"$\" + name\n  let other = propHash[name]\n  if (other) {\n    let isGetSet = kind !== \"init\"\n    if ((this.strict || isGetSet) && other[kind] || !(isGetSet ^ other.init))\n      this.raiseRecoverable(key.start, \"Redefinition of property\")\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    }\n  }\n  other[kind] = true\n}\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp.parseExpression = function(noIn, refDestructuringErrors) {\n  let startPos = this.start, startLoc = this.startLoc\n  let expr = this.parseMaybeAssign(noIn, refDestructuringErrors)\n  if (this.type === tt.comma) {\n    let node = this.startNodeAt(startPos, startLoc)\n    node.expressions = [expr]\n    while (this.eat(tt.comma)) node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors))\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n}\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) return this.parseYield()\n\n  let validateDestructuring = false\n  if (!refDestructuringErrors) {\n    refDestructuringErrors = {shorthandAssign: 0, trailingComma: 0}\n    validateDestructuring = true\n  }\n  let startPos = this.start, startLoc = this.startLoc\n  if (this.type == tt.parenL || this.type == tt.name)\n    this.potentialArrowAt = this.start\n  let left = this.parseMaybeConditional(noIn, refDestructuringErrors)\n  if (afterLeftParse) left = afterLeftParse.call(this, left, startPos, startLoc)\n  if (this.type.isAssign) {\n    if (validateDestructuring) this.checkPatternErrors(refDestructuringErrors, true)\n    let node = this.startNodeAt(startPos, startLoc)\n    node.operator = this.value\n    node.left = this.type === tt.eq ? this.toAssignable(left) : left\n    refDestructuringErrors.shorthandAssign = 0 // reset because shorthand default was used correctly\n    this.checkLVal(left)\n    this.next()\n    node.right = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (validateDestructuring) this.checkExpressionErrors(refDestructuringErrors, true)\n  }\n  return left\n}\n\n// Parse a ternary conditional (`?:`) operator.\n\npp.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  let startPos = this.start, startLoc = this.startLoc\n  let expr = this.parseExprOps(noIn, refDestructuringErrors)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  if (this.eat(tt.question)) {\n    let node = this.startNodeAt(startPos, startLoc)\n    node.test = expr\n    node.consequent = this.parseMaybeAssign()\n    this.expect(tt.colon)\n    node.alternate = this.parseMaybeAssign(noIn)\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n}\n\n// Start the precedence parser.\n\npp.parseExprOps = function(noIn, refDestructuringErrors) {\n  let startPos = this.start, startLoc = this.startLoc\n  let expr = this.parseMaybeUnary(refDestructuringErrors, false)\n  if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n  return this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n}\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  let prec = this.type.binop\n  if (prec != null && (!noIn || this.type !== tt._in)) {\n    if (prec > minPrec) {\n      let logical = this.type === tt.logicalOR || this.type === tt.logicalAND\n      let op = this.value\n      this.next()\n      let startPos = this.start, startLoc = this.startLoc\n      let right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn)\n      let node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical)\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n}\n\npp.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  let node = this.startNodeAt(startPos, startLoc)\n  node.left = left\n  node.operator = op\n  node.right = right\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n}\n\n// Parse unary operators, both prefix and postfix.\n\npp.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  let startPos = this.start, startLoc = this.startLoc, expr\n  if (this.type.prefix) {\n    let node = this.startNode(), update = this.type === tt.incDec\n    node.operator = this.value\n    node.prefix = true\n    this.next()\n    node.argument = this.parseMaybeUnary(null, true)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n    if (update) this.checkLVal(node.argument)\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\")\n    else sawUnary = true\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\")\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors)\n    if (this.checkExpressionErrors(refDestructuringErrors)) return expr\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      let node = this.startNodeAt(startPos, startLoc)\n      node.operator = this.value\n      node.prefix = false\n      node.argument = expr\n      this.checkLVal(expr)\n      this.next()\n      expr = this.finishNode(node, \"UpdateExpression\")\n    }\n  }\n\n  if (!sawUnary && this.eat(tt.starstar))\n    return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false)\n  else\n    return expr\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp.parseExprSubscripts = function(refDestructuringErrors) {\n  let startPos = this.start, startLoc = this.startLoc\n  let expr = this.parseExprAtom(refDestructuringErrors)\n  let skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\"\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) return expr\n  return this.parseSubscripts(expr, startPos, startLoc)\n}\n\npp.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  for (;;) {\n    if (this.eat(tt.dot)) {\n      let node = this.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.property = this.parseIdent(true)\n      node.computed = false\n      base = this.finishNode(node, \"MemberExpression\")\n    } else if (this.eat(tt.bracketL)) {\n      let node = this.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.property = this.parseExpression()\n      node.computed = true\n      this.expect(tt.bracketR)\n      base = this.finishNode(node, \"MemberExpression\")\n    } else if (!noCalls && this.eat(tt.parenL)) {\n      let node = this.startNodeAt(startPos, startLoc)\n      node.callee = base\n      node.arguments = this.parseExprList(tt.parenR, false)\n      base = this.finishNode(node, \"CallExpression\")\n    } else if (this.type === tt.backQuote) {\n      let node = this.startNodeAt(startPos, startLoc)\n      node.tag = base\n      node.quasi = this.parseTemplate()\n      base = this.finishNode(node, \"TaggedTemplateExpression\")\n    } else {\n      return base\n    }\n  }\n}\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp.parseExprAtom = function(refDestructuringErrors) {\n  let node, canBeArrow = this.potentialArrowAt == this.start\n  switch (this.type) {\n  case tt._super:\n    if (!this.inFunction)\n      this.raise(this.start, \"'super' outside of function or class\")\n\n  case tt._this:\n    let type = this.type === tt._this ? \"ThisExpression\" : \"Super\"\n    node = this.startNode()\n    this.next()\n    return this.finishNode(node, type)\n\n  case tt.name:\n    let startPos = this.start, startLoc = this.startLoc\n    let id = this.parseIdent(this.type !== tt.name)\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow))\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id])\n    return id\n\n  case tt.regexp:\n    let value = this.value\n    node = this.parseLiteral(value.value)\n    node.regex = {pattern: value.pattern, flags: value.flags}\n    return node\n\n  case tt.num: case tt.string:\n    return this.parseLiteral(this.value)\n\n  case tt._null: case tt._true: case tt._false:\n    node = this.startNode()\n    node.value = this.type === tt._null ? null : this.type === tt._true\n    node.raw = this.type.keyword\n    this.next()\n    return this.finishNode(node, \"Literal\")\n\n  case tt.parenL:\n    return this.parseParenAndDistinguishExpression(canBeArrow)\n\n  case tt.bracketL:\n    node = this.startNode()\n    this.next()\n    node.elements = this.parseExprList(tt.bracketR, true, true, refDestructuringErrors)\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tt.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case tt._function:\n    node = this.startNode()\n    this.next()\n    return this.parseFunction(node, false)\n\n  case tt._class:\n    return this.parseClass(this.startNode(), false)\n\n  case tt._new:\n    return this.parseNew()\n\n  case tt.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected()\n  }\n}\n\npp.parseLiteral = function(value) {\n  let node = this.startNode()\n  node.value = value\n  node.raw = this.input.slice(this.start, this.end)\n  this.next()\n  return this.finishNode(node, \"Literal\")\n}\n\npp.parseParenExpression = function() {\n  this.expect(tt.parenL)\n  let val = this.parseExpression()\n  this.expect(tt.parenR)\n  return val\n}\n\npp.parseParenAndDistinguishExpression = function(canBeArrow) {\n  let startPos = this.start, startLoc = this.startLoc, val\n  if (this.options.ecmaVersion >= 6) {\n    this.next()\n\n    let innerStartPos = this.start, innerStartLoc = this.startLoc\n    let exprList = [], first = true\n    let refDestructuringErrors = {shorthandAssign: 0, trailingComma: 0}, spreadStart, innerParenStart\n    while (this.type !== tt.parenR) {\n      first ? first = false : this.expect(tt.comma)\n      if (this.type === tt.ellipsis) {\n        spreadStart = this.start\n        exprList.push(this.parseParenItem(this.parseRest()))\n        break\n      } else {\n        if (this.type === tt.parenL && !innerParenStart) {\n          innerParenStart = this.start\n        }\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem))\n      }\n    }\n    let innerEndPos = this.start, innerEndLoc = this.startLoc\n    this.expect(tt.parenR)\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(tt.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, true)\n      if (innerParenStart) this.unexpected(innerParenStart)\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length) this.unexpected(this.lastTokStart)\n    if (spreadStart) this.unexpected(spreadStart)\n    this.checkExpressionErrors(refDestructuringErrors, true)\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc)\n      val.expressions = exprList\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc)\n    } else {\n      val = exprList[0]\n    }\n  } else {\n    val = this.parseParenExpression()\n  }\n\n  if (this.options.preserveParens) {\n    let par = this.startNodeAt(startPos, startLoc)\n    par.expression = val\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n}\n\npp.parseParenItem = function(item) {\n  return item\n}\n\npp.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n}\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nconst empty = []\n\npp.parseNew = function() {\n  let node = this.startNode()\n  let meta = this.parseIdent(true)\n  if (this.options.ecmaVersion >= 6 && this.eat(tt.dot)) {\n    node.meta = meta\n    node.property = this.parseIdent(true)\n    if (node.property.name !== \"target\")\n      this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\")\n    if (!this.inFunction)\n      this.raiseRecoverable(node.start, \"new.target can only be used in functions\")\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  let startPos = this.start, startLoc = this.startLoc\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true)\n  if (this.eat(tt.parenL)) node.arguments = this.parseExprList(tt.parenR, false)\n  else node.arguments = empty\n  return this.finishNode(node, \"NewExpression\")\n}\n\n// Parse template expression.\n\npp.parseTemplateElement = function() {\n  let elem = this.startNode()\n  elem.value = {\n    raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, '\\n'),\n    cooked: this.value\n  }\n  this.next()\n  elem.tail = this.type === tt.backQuote\n  return this.finishNode(elem, \"TemplateElement\")\n}\n\npp.parseTemplate = function() {\n  let node = this.startNode()\n  this.next()\n  node.expressions = []\n  let curElt = this.parseTemplateElement()\n  node.quasis = [curElt]\n  while (!curElt.tail) {\n    this.expect(tt.dollarBraceL)\n    node.expressions.push(this.parseExpression())\n    this.expect(tt.braceR)\n    node.quasis.push(curElt = this.parseTemplateElement())\n  }\n  this.next()\n  return this.finishNode(node, \"TemplateLiteral\")\n}\n\n// Parse an object literal or binding pattern.\n\npp.parseObj = function(isPattern, refDestructuringErrors) {\n  let node = this.startNode(), first = true, propHash = {}\n  node.properties = []\n  this.next()\n  while (!this.eat(tt.braceR)) {\n    if (!first) {\n      this.expect(tt.comma)\n      if (this.afterTrailingComma(tt.braceR)) break\n    } else first = false\n\n    let prop = this.startNode(), isGenerator, startPos, startLoc\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false\n      prop.shorthand = false\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start\n        startLoc = this.startLoc\n      }\n      if (!isPattern)\n        isGenerator = this.eat(tt.star)\n    }\n    this.parsePropertyName(prop)\n    this.parsePropertyValue(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors)\n    this.checkPropClash(prop, propHash)\n    node.properties.push(this.finishNode(prop, \"Property\"))\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n}\n\npp.parsePropertyValue = function(prop, isPattern, isGenerator, startPos, startLoc, refDestructuringErrors) {\n  if (this.eat(tt.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors)\n      prop.kind = \"init\"\n    } else if (this.options.ecmaVersion >= 6 && this.type === tt.parenL) {\n      if (isPattern) this.unexpected()\n      prop.kind = \"init\"\n      prop.method = true\n      prop.value = this.parseMethod(isGenerator)\n    } else if (this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type != tt.comma && this.type != tt.braceR)) {\n      if (isGenerator || isPattern) this.unexpected()\n      prop.kind = prop.key.name\n      this.parsePropertyName(prop)\n      prop.value = this.parseMethod(false)\n      let paramCount = prop.kind === \"get\" ? 0 : 1\n      if (prop.value.params.length !== paramCount) {\n        let start = prop.value.start\n        if (prop.kind === \"get\")\n          this.raiseRecoverable(start, \"getter should have no params\")\n        else\n          this.raiseRecoverable(start, \"setter should have exactly one param\")\n      }\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\")\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      prop.kind = \"init\"\n      if (isPattern) {\n        if (this.keywords.test(prop.key.name) ||\n            (this.strict ? this.reservedWordsStrictBind : this.reservedWords).test(prop.key.name) ||\n            (this.inGenerator && prop.key.name == \"yield\"))\n          this.raiseRecoverable(prop.key.start, \"Binding \" + prop.key.name)\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n      } else if (this.type === tt.eq && refDestructuringErrors) {\n        if (!refDestructuringErrors.shorthandAssign)\n          refDestructuringErrors.shorthandAssign = this.start\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key)\n      } else {\n        prop.value = prop.key\n      }\n      prop.shorthand = true\n    } else this.unexpected()\n}\n\npp.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tt.bracketL)) {\n      prop.computed = true\n      prop.key = this.parseMaybeAssign()\n      this.expect(tt.bracketR)\n      return prop.key\n    } else {\n      prop.computed = false\n    }\n  }\n  return prop.key = (this.type === tt.num || this.type === tt.string) ? this.parseExprAtom() : this.parseIdent(true)\n}\n\n// Initialize empty function node.\n\npp.initFunction = function(node) {\n  node.id = null\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false\n    node.expression = false\n  }\n}\n\n// Parse object or class method.\n\npp.parseMethod = function(isGenerator) {\n  let node = this.startNode(), oldInGen = this.inGenerator\n  this.inGenerator = isGenerator\n  this.initFunction(node)\n  this.expect(tt.parenL)\n  node.params = this.parseBindingList(tt.parenR, false, false)\n  if (this.options.ecmaVersion >= 6)\n    node.generator = isGenerator\n  this.parseFunctionBody(node, false)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, \"FunctionExpression\")\n}\n\n// Parse arrow function expression with given parameters.\n\npp.parseArrowExpression = function(node, params) {\n  let oldInGen = this.inGenerator\n  this.inGenerator = false\n  this.initFunction(node)\n  node.params = this.toAssignableList(params, true)\n  this.parseFunctionBody(node, true)\n  this.inGenerator = oldInGen\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n}\n\n// Parse function body and check parameters.\n\npp.parseFunctionBody = function(node, isArrowFunction) {\n  let isExpression = isArrowFunction && this.type !== tt.braceL\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign()\n    node.expression = true\n  } else {\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    let oldInFunc = this.inFunction, oldLabels = this.labels\n    this.inFunction = true; this.labels = []\n    node.body = this.parseBlock(true)\n    node.expression = false\n    this.inFunction = oldInFunc; this.labels = oldLabels\n  }\n\n  // If this is a strict mode function, verify that argument names\n  // are not repeated, and it does not try to bind the words `eval`\n  // or `arguments`.\n  if (this.strict || !isExpression && node.body.body.length && this.isUseStrict(node.body.body[0])) {\n    let oldStrict = this.strict\n    this.strict = true\n    if (node.id)\n      this.checkLVal(node.id, true)\n    this.checkParams(node)\n    this.strict = oldStrict\n  } else if (isArrowFunction) {\n    this.checkParams(node)\n  }\n}\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp.checkParams = function(node) {\n    let nameHash = {}\n    for (let i = 0; i < node.params.length; i++)\n      this.checkLVal(node.params[i], true, nameHash)\n}\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  let elts = [], first = true\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(tt.comma)\n      if (allowTrailingComma && this.afterTrailingComma(close)) break\n    } else first = false\n\n    let elt\n    if (allowEmpty && this.type === tt.comma)\n      elt = null\n    else if (this.type === tt.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors)\n      if (this.type === tt.comma && refDestructuringErrors && !refDestructuringErrors.trailingComma) {\n        refDestructuringErrors.trailingComma = this.lastTokStart\n      }\n    } else\n      elt = this.parseMaybeAssign(false, refDestructuringErrors)\n    elts.push(elt)\n  }\n  return elts\n}\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp.parseIdent = function(liberal) {\n  let node = this.startNode()\n  if (liberal && this.options.allowReserved == \"never\") liberal = false\n  if (this.type === tt.name) {\n    if (!liberal && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(this.value) &&\n        (this.options.ecmaVersion >= 6 ||\n         this.input.slice(this.start, this.end).indexOf(\"\\\\\") == -1))\n      this.raiseRecoverable(this.start, \"The keyword '\" + this.value + \"' is reserved\")\n    if (!liberal && this.inGenerator && this.value === \"yield\")\n      this.raiseRecoverable(this.start, \"Can not use 'yield' as identifier inside a generator\")\n    node.name = this.value\n  } else if (liberal && this.type.keyword) {\n    node.name = this.type.keyword\n  } else {\n    this.unexpected()\n  }\n  this.next()\n  return this.finishNode(node, \"Identifier\")\n}\n\n// Parses yield expression inside generator.\n\npp.parseYield = function() {\n  let node = this.startNode()\n  this.next()\n  if (this.type == tt.semi || this.canInsertSemicolon() || (this.type != tt.star && !this.type.startsExpr)) {\n    node.delegate = false\n    node.argument = null\n  } else {\n    node.delegate = this.eat(tt.star)\n    node.argument = this.parseMaybeAssign()\n  }\n  return this.finishNode(node, \"YieldExpression\")\n}\n","import {Parser} from \"./state\"\nimport {Position, getLineInfo} from \"./locutil\"\n\nconst pp = Parser.prototype\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp.raise = function(pos, message) {\n  let loc = getLineInfo(this.input, pos)\n  message += \" (\" + loc.line + \":\" + loc.column + \")\"\n  let err = new SyntaxError(message)\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos\n  throw err\n}\n\npp.raiseRecoverable = pp.raise\n\npp.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n}\n","import {Parser} from \"./state\"\nimport {SourceLocation} from \"./locutil\"\n\nexport class Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\"\n    this.start = pos\n    this.end = 0\n    if (parser.options.locations)\n      this.loc = new SourceLocation(parser, loc)\n    if (parser.options.directSourceFile)\n      this.sourceFile = parser.options.directSourceFile\n    if (parser.options.ranges)\n      this.range = [pos, 0]\n  }\n}\n\n// Start an AST node, attaching a start offset.\n\nconst pp = Parser.prototype\n\npp.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n}\n\npp.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n}\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type\n  node.end = pos\n  if (this.options.locations)\n    node.loc.end = loc\n  if (this.options.ranges)\n    node.range[1] = pos\n  return node\n}\n\npp.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n}\n\n// Finish node at given position\n\npp.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n}\n","// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nimport {Parser} from \"./state\"\nimport {types as tt} from \"./tokentype\"\nimport {lineBreak} from \"./whitespace\"\n\nexport class TokContext {\n  constructor(token, isExpr, preserveSpace, override) {\n    this.token = token\n    this.isExpr = !!isExpr\n    this.preserveSpace = !!preserveSpace\n    this.override = override\n  }\n}\n\nexport const types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", true),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, p => p.readTmplToken()),\n  f_expr: new TokContext(\"function\", true)\n}\n\nconst pp = Parser.prototype\n\npp.initialContext = function() {\n  return [types.b_stat]\n}\n\npp.braceIsBlock = function(prevType) {\n  if (prevType === tt.colon) {\n    let parent = this.curContext()\n    if (parent === types.b_stat || parent === types.b_expr)\n      return !parent.isExpr\n  }\n  if (prevType === tt._return)\n    return lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  if (prevType === tt._else || prevType === tt.semi || prevType === tt.eof || prevType === tt.parenR)\n    return true\n  if (prevType == tt.braceL)\n    return this.curContext() === types.b_stat\n  return !this.exprAllowed\n}\n\npp.updateContext = function(prevType) {\n  let update, type = this.type\n  if (type.keyword && prevType == tt.dot)\n    this.exprAllowed = false\n  else if (update = type.updateContext)\n    update.call(this, prevType)\n  else\n    this.exprAllowed = type.beforeExpr\n}\n\n// Token-specific context update code\n\ntt.parenR.updateContext = tt.braceR.updateContext = function() {\n  if (this.context.length == 1) {\n    this.exprAllowed = true\n    return\n  }\n  let out = this.context.pop()\n  if (out === types.b_stat && this.curContext() === types.f_expr) {\n    this.context.pop()\n    this.exprAllowed = false\n  } else if (out === types.b_tmpl) {\n    this.exprAllowed = true\n  } else {\n    this.exprAllowed = !out.isExpr\n  }\n}\n\ntt.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr)\n  this.exprAllowed = true\n}\n\ntt.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl)\n  this.exprAllowed = true\n}\n\ntt.parenL.updateContext = function(prevType) {\n  let statementParens = prevType === tt._if || prevType === tt._for || prevType === tt._with || prevType === tt._while\n  this.context.push(statementParens ? types.p_stat : types.p_expr)\n  this.exprAllowed = true\n}\n\ntt.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n}\n\ntt._function.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== tt.semi && prevType !== tt._else &&\n      (prevType !== tt.colon || this.curContext() !== types.b_stat))\n    this.context.push(types.f_expr)\n  this.exprAllowed = false\n}\n\ntt.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    this.context.pop()\n  else\n    this.context.push(types.q_tmpl)\n  this.exprAllowed = false\n}\n","import {isIdentifierStart, isIdentifierChar} from \"./identifier\"\nimport {types as tt, keywords as keywordTypes} from \"./tokentype\"\nimport {Parser} from \"./state\"\nimport {SourceLocation} from \"./locutil\"\nimport {lineBreak, lineBreakG, isNewLine, nonASCIIwhitespace} from \"./whitespace\"\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(p) {\n    this.type = p.type\n    this.value = p.value\n    this.start = p.start\n    this.end = p.end\n    if (p.options.locations)\n      this.loc = new SourceLocation(p, p.startLoc, p.endLoc)\n    if (p.options.ranges)\n      this.range = [p.start, p.end]\n  }\n}\n\n// ## Tokenizer\n\nconst pp = Parser.prototype\n\n// Are we running under Rhino?\nconst isRhino = typeof Packages == \"object\" && Object.prototype.toString.call(Packages) == \"[object JavaPackage]\"\n\n// Move to the next token\n\npp.next = function() {\n  if (this.options.onToken)\n    this.options.onToken(new Token(this))\n\n  this.lastTokEnd = this.end\n  this.lastTokStart = this.start\n  this.lastTokEndLoc = this.endLoc\n  this.lastTokStartLoc = this.startLoc\n  this.nextToken()\n}\n\npp.getToken = function() {\n  this.next()\n  return new Token(this)\n}\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  pp[Symbol.iterator] = function () {\n    let self = this\n    return {next: function () {\n      let token = self.getToken()\n      return {\n        done: token.type === tt.eof,\n        value: token\n      }\n    }}\n  }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp.setStrict = function(strict) {\n  this.strict = strict\n  if (this.type !== tt.num && this.type !== tt.string) return\n  this.pos = this.start\n  if (this.options.locations) {\n    while (this.pos < this.lineStart) {\n      this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1\n      --this.curLine\n    }\n  }\n  this.nextToken()\n}\n\npp.curContext = function() {\n  return this.context[this.context.length - 1]\n}\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  let curContext = this.curContext()\n  if (!curContext || !curContext.preserveSpace) this.skipSpace()\n\n  this.start = this.pos\n  if (this.options.locations) this.startLoc = this.curPosition()\n  if (this.pos >= this.input.length) return this.finishToken(tt.eof)\n\n  if (curContext.override) return curContext.override(this)\n  else this.readToken(this.fullCharCodeAtPos())\n}\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    return this.readWord()\n\n  return this.getTokenFromCode(code)\n}\n\npp.fullCharCodeAtPos = function() {\n  let code = this.input.charCodeAt(this.pos)\n  if (code <= 0xd7ff || code >= 0xe000) return code\n  let next = this.input.charCodeAt(this.pos + 1)\n  return (code << 10) + next - 0x35fdc00\n}\n\npp.skipBlockComment = function() {\n  let startLoc = this.options.onComment && this.curPosition()\n  let start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2)\n  if (end === -1) this.raise(this.pos - 2, \"Unterminated comment\")\n  this.pos = end + 2\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start\n    let match\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this.curLine\n      this.lineStart = match.index + match[0].length\n    }\n  }\n  if (this.options.onComment)\n    this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\npp.skipLineComment = function(startSkip) {\n  let start = this.pos\n  let startLoc = this.options.onComment && this.curPosition()\n  let ch = this.input.charCodeAt(this.pos+=startSkip)\n  while (this.pos < this.input.length && ch !== 10 && ch !== 13 && ch !== 8232 && ch !== 8233) {\n    ++this.pos\n    ch = this.input.charCodeAt(this.pos)\n  }\n  if (this.options.onComment)\n    this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition())\n}\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    let ch = this.input.charCodeAt(this.pos)\n    switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos\n        if (this.options.locations) {\n          ++this.curLine\n          this.lineStart = this.pos\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n          case 42: // '*'\n            this.skipBlockComment()\n            break\n          case 47:\n            this.skipLineComment(2)\n            break\n          default:\n            break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos\n        } else {\n          break loop\n        }\n    }\n  }\n}\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos\n  if (this.options.locations) this.endLoc = this.curPosition()\n  let prevType = this.type\n  this.type = type\n  this.value = val\n\n  this.updateContext(prevType)\n}\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next >= 48 && next <= 57) return this.readNumber(true)\n  let next2 = this.input.charCodeAt(this.pos + 2)\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3\n    return this.finishToken(tt.ellipsis)\n  } else {\n    ++this.pos\n    return this.finishToken(tt.dot)\n  }\n}\n\npp.readToken_slash = function() { // '/'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (this.exprAllowed) {++this.pos; return this.readRegexp()}\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.slash, 1)\n}\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  let next = this.input.charCodeAt(this.pos + 1)\n  let size = 1\n  let tokentype = code === 42 ? tt.star : tt.modulo\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && next === 42) {\n    ++size\n    tokentype = tt.starstar\n    next = this.input.charCodeAt(this.pos + 2)\n  }\n\n  if (next === 61) return this.finishOp(tt.assign, size + 1)\n  return this.finishOp(tokentype, size)\n}\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) return this.finishOp(code === 124 ? tt.logicalOR : tt.logicalAND, 2)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(code === 124 ? tt.bitwiseOR : tt.bitwiseAND, 1)\n}\n\npp.readToken_caret = function() { // '^'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.bitwiseXOR, 1)\n}\n\npp.readToken_plus_min = function(code) { // '+-'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === code) {\n    if (next == 45 && this.input.charCodeAt(this.pos + 2) == 62 &&\n        lineBreak.test(this.input.slice(this.lastTokEnd, this.pos))) {\n      // A `-->` line comment\n      this.skipLineComment(3)\n      this.skipSpace()\n      return this.nextToken()\n    }\n    return this.finishOp(tt.incDec, 2)\n  }\n  if (next === 61) return this.finishOp(tt.assign, 2)\n  return this.finishOp(tt.plusMin, 1)\n}\n\npp.readToken_lt_gt = function(code) { // '<>'\n  let next = this.input.charCodeAt(this.pos + 1)\n  let size = 1\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2\n    if (this.input.charCodeAt(this.pos + size) === 61) return this.finishOp(tt.assign, size + 1)\n    return this.finishOp(tt.bitShift, size)\n  }\n  if (next == 33 && code == 60 && this.input.charCodeAt(this.pos + 2) == 45 &&\n      this.input.charCodeAt(this.pos + 3) == 45) {\n    if (this.inModule) this.unexpected()\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4)\n    this.skipSpace()\n    return this.nextToken()\n  }\n  if (next === 61) size = 2\n  return this.finishOp(tt.relational, size)\n}\n\npp.readToken_eq_excl = function(code) { // '=!'\n  let next = this.input.charCodeAt(this.pos + 1)\n  if (next === 61) return this.finishOp(tt.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2)\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2\n    return this.finishToken(tt.arrow)\n  }\n  return this.finishOp(code === 61 ? tt.eq : tt.prefix, 1)\n}\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n    // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(tt.parenL)\n  case 41: ++this.pos; return this.finishToken(tt.parenR)\n  case 59: ++this.pos; return this.finishToken(tt.semi)\n  case 44: ++this.pos; return this.finishToken(tt.comma)\n  case 91: ++this.pos; return this.finishToken(tt.bracketL)\n  case 93: ++this.pos; return this.finishToken(tt.bracketR)\n  case 123: ++this.pos; return this.finishToken(tt.braceL)\n  case 125: ++this.pos; return this.finishToken(tt.braceR)\n  case 58: ++this.pos; return this.finishToken(tt.colon)\n  case 63: ++this.pos; return this.finishToken(tt.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) break\n    ++this.pos\n    return this.finishToken(tt.backQuote)\n\n  case 48: // '0'\n    let next = this.input.charCodeAt(this.pos + 1)\n    if (next === 120 || next === 88) return this.readRadixNumber(16) // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) return this.readRadixNumber(8) // '0o', '0O' - octal number\n      if (next === 98 || next === 66) return this.readRadixNumber(2) // '0b', '0B' - binary number\n    }\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n    // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(tt.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\")\n}\n\npp.finishOp = function(type, size) {\n  let str = this.input.slice(this.pos, this.pos + size)\n  this.pos += size\n  return this.finishToken(type, str)\n}\n\n// Parse a regular expression. Some context-awareness is necessary,\n// since a '/' inside a '[]' set does not end the expression.\n\nfunction tryCreateRegexp(src, flags, throwErrorAt, parser) {\n  try {\n    return new RegExp(src, flags)\n  } catch (e) {\n    if (throwErrorAt !== undefined) {\n      if (e instanceof SyntaxError) parser.raise(throwErrorAt, \"Error parsing regular expression: \" + e.message)\n      throw e\n    }\n  }\n}\n\nvar regexpUnicodeSupport = !!tryCreateRegexp(\"\\uffff\", \"u\")\n\npp.readRegexp = function() {\n  let escaped, inClass, start = this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(start, \"Unterminated regular expression\")\n    let ch = this.input.charAt(this.pos)\n    if (lineBreak.test(ch)) this.raise(start, \"Unterminated regular expression\")\n    if (!escaped) {\n      if (ch === \"[\") inClass = true\n      else if (ch === \"]\" && inClass) inClass = false\n      else if (ch === \"/\" && !inClass) break\n      escaped = ch === \"\\\\\"\n    } else escaped = false\n    ++this.pos\n  }\n  let content = this.input.slice(start, this.pos)\n  ++this.pos\n  // Need to use `readWord1` because '\\uXXXX' sequences are allowed\n  // here (don't ask).\n  let mods = this.readWord1()\n  let tmp = content\n  if (mods) {\n    let validFlags = /^[gim]*$/\n    if (this.options.ecmaVersion >= 6) validFlags = /^[gimuy]*$/\n    if (!validFlags.test(mods)) this.raise(start, \"Invalid regular expression flag\")\n    if (mods.indexOf('u') >= 0 && !regexpUnicodeSupport) {\n      // Replace each astral symbol and every Unicode escape sequence that\n      // possibly represents an astral symbol or a paired surrogate with a\n      // single ASCII symbol to avoid throwing on regular expressions that\n      // are only valid in combination with the `/u` flag.\n      // Note: replacing with the ASCII symbol `x` might cause false\n      // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n      // perfectly valid pattern that is equivalent to `[a-b]`, but it would\n      // be replaced by `[x-b]` which throws an error.\n      tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, (_match, code, offset) => {\n        code = Number(\"0x\" + code)\n        if (code > 0x10FFFF) this.raise(start + offset + 3, \"Code point out of bounds\")\n        return \"x\"\n      })\n      tmp = tmp.replace(/\\\\u([a-fA-F0-9]{4})|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, \"x\")\n    }\n  }\n  // Detect invalid regular expressions.\n  let value = null\n  // Rhino's regular expression parser is flaky and throws uncatchable exceptions,\n  // so don't do detection if we are running under Rhino\n  if (!isRhino) {\n    tryCreateRegexp(tmp, undefined, start, this)\n    // Get a regular expression object for this pattern-flag pair, or `null` in\n    // case the current environment doesn't support the flags it uses.\n    value = tryCreateRegexp(content, mods)\n  }\n  return this.finishToken(tt.regexp, {pattern: content, flags: mods, value: value})\n}\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len) {\n  let start = this.pos, total = 0\n  for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    let code = this.input.charCodeAt(this.pos), val\n    if (code >= 97) val = code - 97 + 10 // a\n    else if (code >= 65) val = code - 65 + 10 // A\n    else if (code >= 48 && code <= 57) val = code - 48 // 0-9\n    else val = Infinity\n    if (val >= radix) break\n    ++this.pos\n    total = total * radix + val\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) return null\n\n  return total\n}\n\npp.readRadixNumber = function(radix) {\n  this.pos += 2 // 0x\n  let val = this.readInt(radix)\n  if (val == null) this.raise(this.start + 2, \"Expected number in radix \" + radix)\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n  return this.finishToken(tt.num, val)\n}\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  let start = this.pos, isFloat = false, octal = this.input.charCodeAt(this.pos) === 48\n  if (!startsWithDot && this.readInt(10) === null) this.raise(start, \"Invalid number\")\n  let next = this.input.charCodeAt(this.pos)\n  if (next === 46) { // '.'\n    ++this.pos\n    this.readInt(10)\n    isFloat = true\n    next = this.input.charCodeAt(this.pos)\n  }\n  if (next === 69 || next === 101) { // 'eE'\n    next = this.input.charCodeAt(++this.pos)\n    if (next === 43 || next === 45) ++this.pos // '+-'\n    if (this.readInt(10) === null) this.raise(start, \"Invalid number\")\n    isFloat = true\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) this.raise(this.pos, \"Identifier directly after number\")\n\n  let str = this.input.slice(start, this.pos), val\n  if (isFloat) val = parseFloat(str)\n  else if (!octal || str.length === 1) val = parseInt(str, 10)\n  else if (/[89]/.test(str) || this.strict) this.raise(start, \"Invalid number\")\n  else val = parseInt(str, 8)\n  return this.finishToken(tt.num, val)\n}\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  let ch = this.input.charCodeAt(this.pos), code\n\n  if (ch === 123) {\n    if (this.options.ecmaVersion < 6) this.unexpected()\n    let codePos = ++this.pos\n    code = this.readHexChar(this.input.indexOf('}', this.pos) - this.pos)\n    ++this.pos\n    if (code > 0x10FFFF) this.raise(codePos, \"Code point out of bounds\")\n  } else {\n    code = this.readHexChar(4)\n  }\n  return code\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) return String.fromCharCode(code)\n  code -= 0x10000\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp.readString = function(quote) {\n  let out = \"\", chunkStart = ++this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated string constant\")\n    let ch = this.input.charCodeAt(this.pos)\n    if (ch === quote) break\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos)\n      out += this.readEscapedChar(false)\n      chunkStart = this.pos\n    } else {\n      if (isNewLine(ch)) this.raise(this.start, \"Unterminated string constant\")\n      ++this.pos\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++)\n  return this.finishToken(tt.string, out)\n}\n\n// Reads template string tokens.\n\npp.readTmplToken = function() {\n  let out = \"\", chunkStart = this.pos\n  for (;;) {\n    if (this.pos >= this.input.length) this.raise(this.start, \"Unterminated template\")\n    let ch = this.input.charCodeAt(this.pos)\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && this.type === tt.template) {\n        if (ch === 36) {\n          this.pos += 2\n          return this.finishToken(tt.dollarBraceL)\n        } else {\n          ++this.pos\n          return this.finishToken(tt.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos)\n      return this.finishToken(tt.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos)\n      out += this.readEscapedChar(true)\n      chunkStart = this.pos\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos)\n      ++this.pos\n      switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) ++this.pos\n        case 10:\n          out += \"\\n\"\n          break\n        default:\n          out += String.fromCharCode(ch)\n          break\n      }\n      if (this.options.locations) {\n        ++this.curLine\n        this.lineStart = this.pos\n      }\n      chunkStart = this.pos\n    } else {\n      ++this.pos\n    }\n  }\n}\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  let ch = this.input.charCodeAt(++this.pos)\n  ++this.pos\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) ++this.pos // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      let octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0]\n      let octal = parseInt(octalStr, 8)\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1)\n        octal = parseInt(octalStr, 8)\n      }\n      if (octalStr !== \"0\" && (this.strict || inTemplate)) {\n        this.raise(this.pos - 2, \"Octal literal in strict mode\")\n      }\n      this.pos += octalStr.length - 1\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n}\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  let codePos = this.pos\n  let n = this.readInt(16, len)\n  if (n === null) this.raise(codePos, \"Bad character escape sequence\")\n  return n\n}\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false\n  let word = \"\", first = true, chunkStart = this.pos\n  let astral = this.options.ecmaVersion >= 6\n  while (this.pos < this.input.length) {\n    let ch = this.fullCharCodeAtPos()\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true\n      word += this.input.slice(chunkStart, this.pos)\n      let escStart = this.pos\n      if (this.input.charCodeAt(++this.pos) != 117) // \"u\"\n        this.raise(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\")\n      ++this.pos\n      let esc = this.readCodePoint()\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        this.raise(escStart, \"Invalid Unicode escape\")\n      word += codePointToString(esc)\n      chunkStart = this.pos\n    } else {\n      break\n    }\n    first = false\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n}\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  let word = this.readWord1()\n  let type = tt.name\n  if ((this.options.ecmaVersion >= 6 || !this.containsEsc) && this.keywords.test(word))\n    type = keywordTypes[word]\n  return this.finishToken(type, word)\n}\n","// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/ternjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/ternjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nimport {Parser} from \"./state\"\nimport \"./parseutil\"\nimport \"./statement\"\nimport \"./lval\"\nimport \"./expression\"\nimport \"./location\"\n\nexport {Parser, plugins} from \"./state\"\nexport {defaultOptions} from \"./options\"\nexport {Position, SourceLocation, getLineInfo} from \"./locutil\"\nexport {Node} from \"./node\"\nexport {TokenType, types as tokTypes} from \"./tokentype\"\nexport {TokContext, types as tokContexts} from \"./tokencontext\"\nexport {isIdentifierChar, isIdentifierStart} from \"./identifier\"\nexport {Token} from \"./tokenize\"\nexport {isNewLine, lineBreak, lineBreakG} from \"./whitespace\"\n\nexport const version = \"3.1.0\"\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nexport function parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nexport function parseExpressionAt(input, pos, options) {\n  let p = new Parser(options, input, pos)\n  p.nextToken()\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nexport function tokenizer(input, options) {\n  return new Parser(options, input)\n}\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","import { encode } from 'vlq';\n\nfunction Chunk ( start, end, content ) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n}\n\nChunk.prototype = {\n\tclone: function () {\n\t\tvar chunk = new Chunk( this.start, this.end, this.original );\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t},\n\n\tedit: function ( content, storeName ) {\n\t\tthis.content = content;\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t},\n\n\tsplit: function ( index ) {\n\t\tif ( index === this.start ) return this;\n\n\t\tvar sliceIndex = index - this.start;\n\n\t\tvar originalBefore = this.original.slice( 0, sliceIndex );\n\t\tvar originalAfter = this.original.slice( sliceIndex );\n\n\t\tthis.original = originalBefore;\n\n\t\tvar newChunk = new Chunk( index, this.end, originalAfter );\n\t\tthis.end = index;\n\n\t\tif ( this.edited ) {\n\t\t\tif ( this.content.length ) throw new Error( (\"Cannot split a chunk that has already been edited (\\\"\" + (this.original) + \"\\\")\") );\n\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tnewChunk.edit( '', false );\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\treturn newChunk;\n\t}\n};\n\nvar _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = function ( str ) { return new Buffer( str ).toString( 'base64' ); };\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nvar btoa = _btoa;\n\nfunction SourceMap ( properties ) {\n\tthis.version = 3;\n\n\tthis.file           = properties.file;\n\tthis.sources        = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names          = properties.names;\n\tthis.mappings       = properties.mappings;\n}\n\nSourceMap.prototype = {\n\ttoString: function () {\n\t\treturn JSON.stringify( this );\n\t},\n\n\ttoUrl: function () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n};\n\nfunction guessIndent ( code ) {\n\tvar lines = code.split( '\\n' );\n\n\tvar tabbed = lines.filter( function ( line ) { return /^\\t+/.test( line ); } );\n\tvar spaced = lines.filter( function ( line ) { return /^ {2,}/.test( line ); } );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce( function ( previous, current ) {\n\t\tvar numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n\nfunction getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\treturn function locate ( index ) {\n\t\tvar len = originalLines.length;\n\n\t\tvar lineStart = 0;\n\n\t\tfor ( var i = 0; i < len; i += 1 ) {\n\t\t\tvar line = originalLines[i];\n\t\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\t\tif ( lineEnd > index ) return { line: i, column: index - lineStart };\n\n\t\t\tlineStart = lineEnd;\n\t\t}\n\t};\n}\n\nfunction encodeMappings ( original, intro, chunks, hires, sourcemapLocations, sourceIndex, offsets, names ) {\n\tvar rawLines = [];\n\n\tvar generatedCodeLine = intro.split( '\\n' ).length - 1;\n\tvar rawSegments = rawLines[ generatedCodeLine ] = [];\n\n\tvar generatedCodeColumn = 0;\n\n\tvar locate = getLocator( original );\n\n\tfunction addUneditedChunk ( chunk ) {\n\t\tvar originalCharIndex = chunk.start;\n\t\tvar first = true;\n\n\t\tvar ref = locate( originalCharIndex ), line = ref.line, column = ref.column;\n\n\t\twhile ( originalCharIndex < chunk.end ) {\n\t\t\tif ( hires || first || sourcemapLocations[ originalCharIndex ] ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\t\tsourceCodeLine: line,\n\t\t\t\t\tsourceCodeColumn: column,\n\t\t\t\t\tsourceCodeName: -1,\n\t\t\t\t\tsourceIndex: sourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ( original[ originalCharIndex ] === '\\n' ) {\n\t\t\t\tline += 1;\n\t\t\t\tcolumn = 0;\n\t\t\t\tgeneratedCodeLine += 1;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = 0;\n\t\t\t} else {\n\t\t\t\tcolumn += 1;\n\t\t\t\tgeneratedCodeColumn += 1;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t\tfirst = false;\n\t\t}\n\t}\n\n\tfor ( var i = 0; i < chunks.length; i += 1 ) {\n\t\tvar chunk = chunks[i];\n\t\tvar ref = locate( chunk.start ), line = ref.line, column = ref.column;\n\n\t\tif ( chunk.edited ) {\n\t\t\tif ( i > 0 || chunk.content.length ) {\n\t\t\t\trawSegments.push({\n\t\t\t\t\tgeneratedCodeLine: generatedCodeLine,\n\t\t\t\t\tgeneratedCodeColumn: generatedCodeColumn,\n\t\t\t\t\tsourceCodeLine: line,\n\t\t\t\t\tsourceCodeColumn: column,\n\t\t\t\t\tsourceCodeName: chunk.storeName ? names.indexOf( chunk.original ) : -1,\n\t\t\t\t\tsourceIndex: sourceIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar lines = chunk.content.split( '\\n' );\n\t\t\tvar lastLine = lines.pop();\n\n\t\t\tif ( lines.length ) {\n\t\t\t\tgeneratedCodeLine += lines.length;\n\t\t\t\trawLines[ generatedCodeLine ] = rawSegments = [];\n\t\t\t\tgeneratedCodeColumn = lastLine.length;\n\t\t\t} else {\n\t\t\t\tgeneratedCodeColumn += lastLine.length;\n\t\t\t}\n\n\t\t\tlines = chunk.original.split( '\\n' );\n\t\t\tlastLine = lines.pop();\n\n\t\t\tif ( lines.length ) {\n\t\t\t\tline += lines.length;\n\t\t\t\tcolumn = lastLine.length;\n\t\t\t} else {\n\t\t\t\tcolumn += lastLine.length;\n\t\t\t}\n\t\t} else {\n\t\t\taddUneditedChunk( chunk );\n\t\t}\n\t}\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tvar encoded = rawLines.map( function ( segments ) {\n\t\tvar generatedCodeColumn = 0;\n\n\t\treturn segments.map( function ( segment ) {\n\t\t\tvar arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\nfunction getRelativePath ( from, to ) {\n\tvar fromParts = from.split( /[\\/\\\\]/ );\n\tvar toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tvar i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n\nvar toString = Object.prototype.toString;\n\nfunction isObject ( thing ) {\n\treturn toString.call( thing ) === '[object Object]';\n}\n\nfunction findIndex ( array, fn ) {\n\tfor ( var i = 0; i < array.length; i += 1 ) {\n\t\tif ( fn( array[i], i ) ) return i;\n\t}\n\n\treturn -1;\n}\n\nvar warned = false;\n\nfunction MagicString ( string, options ) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk( 0, string.length, string );\n\n\tObject.defineProperties( this, {\n\t\toriginal:              { writable: true, value: string },\n\t\toutro:                 { writable: true, value: '' },\n\t\tintro:                 { writable: true, value: '' },\n\t\tchunks:                { writable: true, value: [ chunk ] },\n\t\tmoves:                 { writable: true, value: [] },\n\t\tfilename:              { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\tstoredNames:           { writable: true, value: {} },\n\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t});\n}\n\nMagicString.prototype = {\n\taddSourcemapLocation: function ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t},\n\n\tappend: function ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t},\n\n\tclone: function () {\n\t\tvar cloned = new MagicString( this.original, { filename: this.filename });\n\n\t\tcloned.chunks = this.chunks.map( function ( chunk ) { return chunk.clone(); } );\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tcloned.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( function ( range ) { return [ range.start, range.end ]; } );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( function ( loc ) {\n\t\t\tcloned.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn cloned;\n\t},\n\n\tgenerateMap: function ( options ) {\n\t\toptions = options || {};\n\n\t\tvar names = Object.keys( this.storedNames );\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames: names,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t},\n\n\tgetIndentString: function () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t},\n\n\tgetMappings: function ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.intro, this.chunks, hires, this.sourcemapLocations, sourceIndex, offsets, names );\n\t},\n\n\tindent: function ( indentStr, options ) {\n\t\tvar pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( isObject( indentStr ) ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tvar isExcluded = {};\n\n\t\tif ( options.exclude ) {\n\t\t\tvar exclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\t\t\texclusions.forEach( function ( exclusion ) {\n\t\t\t\tfor ( var i = exclusion[0]; i < exclusion[1]; i += 1 ) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\t\tvar replacer = function ( match ) {\n\t\t\tif ( shouldIndentNextCharacter ) return (\"\" + indentStr + \"\" + match);\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace( pattern, replacer );\n\n\t\tvar chunkIndex;\n\t\tvar charIndex = 0;\n\n\t\tfor ( chunkIndex = 0; chunkIndex < this.chunks.length; chunkIndex += 1 ) { // can't cache this.chunks.length, it may change\n\t\t\tvar chunk = this.chunks[ chunkIndex ];\n\t\t\tvar end = chunk.end;\n\n\t\t\tif ( chunk.edited ) {\n\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\tchunk.content = chunk.content.replace( pattern, replacer );\n\n\t\t\t\t\tif ( chunk.content.length ) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[ chunk.content.length - 1 ] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile ( charIndex < end ) {\n\t\t\t\t\tif ( !isExcluded[ charIndex ] ) {\n\t\t\t\t\t\tvar char = this.original[ charIndex ];\n\n\t\t\t\t\t\tif ( char === '\\n' ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if ( char !== '\\r' && shouldIndentNextCharacter ) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tvar indentation = new Chunk( charIndex, charIndex, '' ).edit( indentStr, false );\n\t\t\t\t\t\t\tvar remainder = chunk.split( charIndex );\n\n\t\t\t\t\t\t\tif ( charIndex === chunk.start ) {\n\t\t\t\t\t\t\t\tthis.chunks.splice( chunkIndex, 0, indentation );\n\t\t\t\t\t\t\t\tchunkIndex += 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.chunks.splice( chunkIndex + 1, 0, indentation, remainder );\n\t\t\t\t\t\t\t\tchunkIndex += 2;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tchunk = remainder;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t}\n\n\t\tthis.outro = this.outro.replace( pattern, replacer );\n\n\t\treturn this;\n\t},\n\n\tinsert: function ( index, content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'inserted content must be a string' );\n\n\t\tthis._split( index );\n\n\t\tvar next = findIndex( this.chunks, function ( chunk ) { return chunk.original.length && chunk.start === index; } );\n\t\tif ( !~next ) next = this.chunks.length;\n\n\t\tvar newChunk = new Chunk( index, index, '' ).edit( content, false );\n\n\t\tthis.chunks.splice( next, 0, newChunk );\n\t\treturn this;\n\t},\n\n\t// get current location of character in original string\n\tlocate: function () {\n\t\tthrow new Error( 'magicString.locate is deprecated' );\n\t},\n\n\tlocateOrigin: function () {\n\t\tthrow new Error( 'magicString.locateOrigin is deprecated' );\n\t},\n\n\tmove: function ( start, end, index ) {\n\t\tif ( index >= start && index <= end ) throw new Error( 'Cannot move a selection inside itself' );\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\t\tthis._split( index );\n\n\t\tvar firstIndex = findIndex( this.chunks, function ( chunk ) { return chunk.start === start; } );\n\t\tvar lastIndex = findIndex( this.chunks, function ( chunk ) { return chunk.end === end; } );\n\n\t\tvar toMove = this.chunks.splice( firstIndex, lastIndex + 1 - firstIndex );\n\n\t\tvar insertionIndex = findIndex( this.chunks, function ( chunk ) { return chunk.original.length && chunk.start === index; } );\n\t\tif ( !~insertionIndex ) insertionIndex = this.chunks.length;\n\n\t\tthis.chunks.splice.apply( this.chunks, [ insertionIndex, 0 ].concat( toMove ) );\n\n\t\treturn this;\n\t},\n\n\toverwrite: function ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tthis._split( start );\n\t\tthis._split( end );\n\n\t\tif ( storeName ) {\n\t\t\tvar original = this.original.slice( start, end );\n\t\t\tthis.storedNames[ original ] = true;\n\t\t}\n\n\t\tvar firstIndex = findIndex( this.chunks, function ( chunk ) { return chunk.start === start && chunk.original.length; } );\n\t\tif ( !~firstIndex ) firstIndex = this.chunks.length;\n\t\tvar lastIndex = findIndex( this.chunks, function ( chunk ) { return chunk.end === end; } );\n\n\t\tvar newChunk = new Chunk( start, end, this.original.slice( start, end ) ).edit( content, storeName );\n\n\t\tthis.chunks.splice( firstIndex, lastIndex + 1 - firstIndex, newChunk );\n\t\treturn this;\n\t},\n\n\tprepend: function ( content ) {\n\t\tif ( typeof content !== 'string' ) throw new TypeError( 'outro content must be a string' );\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t},\n\n\tremove: function ( start, end ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tif ( start === end ) return this;\n\n\t\tif ( start < 0 || end > this.original.length ) throw new Error( 'Character is out of bounds' );\n\t\tif ( start > end ) throw new Error( 'end must be greater than start' );\n\n\t\tvar firstIndex = findIndex( this.chunks, function ( chunk ) { return chunk.start <= start && chunk.end > start; } );\n\t\tvar chunk = this.chunks[ firstIndex ];\n\n\t\t// if the chunk contains `start`, split\n\t\tif ( chunk.start < start ) {\n\t\t\tif ( chunk.edited && chunk.content.length ) throw new Error( (\"Cannot remove edited content (\\\"\" + (this.original.slice(start, end)) + \"\\\")\") );\n\t\t\tthis._split( start );\n\t\t\tfirstIndex += 1;\n\t\t}\n\n\t\tvar lastIndex = findIndex( this.chunks, function ( chunk ) { return chunk.start < end && chunk.end >= end; } );\n\t\tchunk = this.chunks[ lastIndex ];\n\n\t\t// if the chunk contains `end`, split\n\t\tif ( chunk.start < end ) {\n\t\t\tif ( chunk.edited && chunk.content.length ) throw new Error( (\"Cannot remove edited content (\\\"\" + (this.original.slice(start, end)) + \"\\\")\") );\n\t\t\tthis._split( end );\n\t\t}\n\n\t\tlastIndex += 1;\n\n\t\tvar newChunk = new Chunk( start, end, this.original.slice( start, end ) ).edit( '', false );\n\t\tthis.chunks.splice( firstIndex, lastIndex - firstIndex, newChunk );\n\n\t\treturn this;\n\t},\n\n\treplace: function ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t},\n\n\tslice: function ( start, end ) {\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tvar result = '';\n\n\t\tfor ( var i = 0; i < this.chunks.length; i += 1 ) {\n\t\t\tvar chunk = this.chunks[i];\n\n\t\t\tif ( chunk.end <= start ) continue;\n\t\t\tif ( chunk.start >= end ) break;\n\n\t\t\tif ( chunk.start < start || chunk.end > end ) {\n\t\t\t\tif ( chunk.edited ) throw new Error( (\"Cannot use replaced characters (\" + start + \", \" + end + \") as slice anchors\") );\n\n\t\t\t\tvar sliceStart = Math.max( start - chunk.start, 0 );\n\t\t\t\tvar sliceEnd = Math.min( chunk.content.length - ( chunk.end - end ), chunk.content.length );\n\n\t\t\t\tresult += chunk.content.slice( sliceStart, sliceEnd );\n\t\t\t} else {\n\t\t\t\tresult += chunk.content;\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tsnip: function ( start, end ) {\n\t\tvar clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t},\n\n\t_split: function ( index ) {\n\t\t// TODO bisect\n\t\tfor ( var i = 0; i < this.chunks.length; i += 1 ) {\n\t\t\tvar chunk = this.chunks[i];\n\t\t\tif ( chunk.start === index || chunk.end === index ) return;\n\n\t\t\tif ( chunk.start < index && chunk.end > index ) {\n\t\t\t\tvar newChunk = chunk.split( index );\n\t\t\t\tthis.chunks.splice( i + 1, 0, newChunk );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\n\ttoString: function () {\n\t\treturn this.intro + this.chunks.map( function ( chunk ) { return chunk.content; } ).join( '' ) + this.outro;\n\t},\n\n\ttrimLines: function () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\t// TODO rewrite these methods, post-refactor\n\ttrim: function ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimEnd: function ( charType ) {\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.outro = this.outro.replace( rx, '' );\n\t\tif ( this.outro.length ) return this;\n\n\t\tdo {\n\t\t\tvar lastChunk = this.chunks[ this.chunks.length - 1 ];\n\n\t\t\tif ( lastChunk.content.length ) {\n\t\t\t\tvar match = rx.exec( lastChunk.content );\n\t\t\t\tif ( !match ) return this;\n\n\t\t\t\tif ( lastChunk.edited ) {\n\t\t\t\t\tlastChunk.edit( lastChunk.content.slice( 0, match.index ) );\n\t\t\t\t} else {\n\t\t\t\t\tif ( match.index ) {\n\t\t\t\t\t\tlastChunk.split( match.index + lastChunk.start ); // generated chunk is discarded\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlastChunk.edit( '' );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( match.index > 0 ) return this;\n\t\t\t}\n\n\t\t\tif ( this.chunks.length === 1 ) return this;\n\t\t\tthis.chunks.pop();\n\t\t} while ( true );\n\t},\n\n\ttrimStart: function ( charType ) {\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.intro = this.intro.replace( rx, '' );\n\t\tif ( this.intro.length ) return this;\n\n\t\tdo {\n\t\t\tvar firstChunk = this.chunks[0];\n\n\t\t\tif ( firstChunk.content.length ) {\n\t\t\t\tvar match = rx.exec( firstChunk.content );\n\t\t\t\tif ( !match ) return this;\n\n\t\t\t\tvar end = match.index + match[0].length;\n\n\t\t\t\tif ( firstChunk.edited ) {\n\t\t\t\t\tfirstChunk.edit( firstChunk.content.slice( match.index ) );\n\t\t\t\t} else {\n\t\t\t\t\tvar newChunk = firstChunk.split( end + firstChunk.start ); // existing chunk is discarded\n\t\t\t\t\tthis.chunks[0] = newChunk;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ( end < firstChunk.content.length ) return this;\n\t\t\t}\n\n\t\t\tif ( this.chunks.length === 1 ) return this;\n\t\t\tthis.chunks.shift();\n\t\t} while ( true );\n\t}\n};\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n\nfunction Bundle ( options ) {\n\tif ( options === void 0 ) options = {};\n\n\tthis.intro = options.intro || '';\n\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\tthis.sources = [];\n\n\tthis.uniqueSources = [];\n\tthis.uniqueSourceIndexByFilename = {};\n}\n\nBundle.prototype = {\n\taddSource: function ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( !isObject( source ) || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( function ( option ) {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tvar uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( (\"Illegal source: same filename (\" + (source.filename) + \"), different contents\") );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t},\n\n\tappend: function ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t},\n\n\tclone: function () {\n\t\tvar bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t},\n\n\tgenerateMap: function ( options ) {\n\t\tvar this$1 = this;\n\n\t\tvar offsets = {};\n\n\t\tvar names = [];\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tObject.keys( source.content.storedNames ).forEach( function ( name ) {\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tvar encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( function ( source, i ) {\n\t\t\t\tvar prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tvar mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tvar sourceIndex = this$1.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( function ( source ) {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( function ( source ) {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames: names,\n\t\t\tmappings: encoded\n\t\t});\n\t},\n\n\tgetIndentString: function () {\n\t\tvar indentStringCounts = {};\n\n\t\tthis.sources.forEach( function ( source ) {\n\t\t\tvar indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( function ( a, b ) {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t},\n\n\tindent: function ( indentStr ) {\n\t\tvar this$1 = this;\n\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tvar trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart: indentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\t// TODO this is a very slow way to determine this\n\t\t\ttrailingNewline = source.content.toString().slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, function ( match, index ) {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tprepend: function ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t},\n\n\ttoString: function () {\n\t\tvar this$1 = this;\n\n\t\tvar body = this.sources.map( function ( source, i ) {\n\t\t\tvar separator = source.separator !== undefined ? source.separator : this$1.separator;\n\t\t\tvar str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body;\n\t},\n\n\ttrimLines: function () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t},\n\n\ttrim: function ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t},\n\n\ttrimStart: function ( charType ) {\n\t\tvar rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tvar source;\n\t\t\tvar i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart( charType );\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttrimEnd: function ( charType ) {\n\t\tvar rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tvar source;\n\t\tvar i = this.sources.length - 1;\n\n\t\tdo {\n\t\t\tsource = this.sources[i];\n\n\t\t\tif ( !source ) {\n\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsource.content.trimEnd( charType );\n\t\t\ti -= 1;\n\t\t} while ( source.content.toString() === '' ); // TODO faster way to determine non-empty source?\n\n\t\treturn this;\n\t}\n};\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n//# sourceMappingURL=magic-string.es6.js.map","import wrap from './wrap.js';\n\nconst statementsWithBlocks = {\n\tIfStatement: 'consequent',\n\tForStatement: 'body',\n\tForInStatement: 'body',\n\tForOfStatement: 'body',\n\tWhileStatement: 'body',\n\tArrowFunctionExpression: 'body'\n};\n\nexport default class Node {\n\tconstructor ( raw, parent ) {\n\t\tObject.defineProperties( this, {\n\t\t\tparent: { value: parent },\n\t\t\tprogram: { value: parent.program || parent },\n\t\t\tdepth: { value: parent.depth + 1 },\n\t\t\tkeys: { value: Object.keys( raw ) }\n\t\t});\n\n\t\t// special case – body-less if/for/while statements. TODO others?\n\t\tconst type = statementsWithBlocks[ raw.type ];\n\t\tif ( type && raw[ type ].type !== 'BlockStatement' ) {\n\t\t\tconst nonBlock = raw[ type ];\n\n\t\t\t// create a synthetic block statement, otherwise all hell\n\t\t\t// breaks loose when it comes to block scoping\n\t\t\traw[ type ] = {\n\t\t\t\tstart: nonBlock.start,\n\t\t\t\tend: nonBlock.end,\n\t\t\t\ttype: 'BlockStatement',\n\t\t\t\tbody: [ nonBlock ],\n\t\t\t\tsynthetic: true\n\t\t\t};\n\t\t}\n\n\t\tfor ( const key of this.keys ) {\n\t\t\tthis[ key ] = wrap( raw[ key ], this );\n\t\t}\n\n\t\tthis.program.magicString.addSourcemapLocation( this.start );\n\t\tthis.program.magicString.addSourcemapLocation( this.end );\n\t}\n\n\tancestor ( level ) {\n\t\tlet node = this;\n\t\twhile ( level-- ) {\n\t\t\tnode = node.parent;\n\t\t\tif ( !node ) return null;\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tcontains ( node ) {\n\t\twhile ( node ) {\n\t\t\tif ( node === this ) return true;\n\t\t\tnode = node.parent;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfindLexicalBoundary () {\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindNearest ( type ) {\n\t\tif ( typeof type === 'string' ) type = new RegExp( `^${type}$` );\n\t\tif ( type.test( this.type ) ) return this;\n\t\treturn this.parent.findNearest( type );\n\t}\n\n\tfindScope ( functionScope ) {\n\t\treturn this.parent.findScope( functionScope );\n\t}\n\n\tgetIndentation () {\n\t\tconst lastLine = /\\n(.+)$/.exec( this.program.magicString.original.slice( 0, this.start ) );\n\t\treturn lastLine ? /^[ \\t]*/.exec( lastLine[1] )[0] : '';\n\t}\n\n\tinitialise ( transforms ) {\n\t\tfor ( var key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\tvalue.forEach( node => node && node.initialise( transforms ) );\n\t\t\t} else if ( value && typeof value === 'object' ) {\n\t\t\t\tvalue.initialise( transforms );\n\t\t\t}\n\t\t}\n\t}\n\n\ttoString () {\n\t\treturn this.program.magicString.slice( this.start, this.end );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tfor ( const key of this.keys ) {\n\t\t\tconst value = this[ key ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\tvalue.forEach( node => node && node.transpile( code, transforms ) );\n\t\t\t} else if ( value && typeof value === 'object' ) {\n\t\t\t\tvalue.transpile( code, transforms );\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ArrayExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.spreadRest ) {\n\t\t\tconst lastElement = this.elements[ this.elements.length - 1 ];\n\t\t\tif ( lastElement && lastElement.type === 'SpreadElement' ) {\n\t\t\t\tconst penultimateElement = this.elements[ this.elements.length - 2 ];\n\n\t\t\t\tif ( penultimateElement ) {\n\t\t\t\t\tcode.overwrite( penultimateElement.end, lastElement.start, ` ].concat( ` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( this.start + 1, `].concat(` );\n\t\t\t\t}\n\n\t\t\t\tcode.remove( lastElement.start, lastElement.start + 3 );\n\n\t\t\t\tlet charIndex = lastElement.end;\n\t\t\t\twhile ( code.original[ charIndex ] !== ']' ) charIndex += 1;\n\n\t\t\t\tcode.overwrite( charIndex, charIndex + 1, ')' );\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","export function findIndex ( array, fn ) {\n\tfor ( let i = 0; i < array.length; i += 1 ) {\n\t\tif ( fn( array[i], i ) ) return i;\n\t}\n\n\treturn -1;\n}\n\nexport function find ( array, fn ) {\n\treturn array[ findIndex( array, fn ) ];\n}\n","import Node from '../Node.js';\nimport { find } from '../../utils/array.js';\n\nexport default class ArrowFunctionExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.body.createScope();\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.arrow ) {\n\t\t\tif ( this.params.length === 0 ) {\n\t\t\t\tcode.overwrite( this.start, this.body.start, 'function () ' );\n\t\t\t} else {\n\t\t\t\tcode.insert( this.start, 'function ' );\n\n\t\t\t\tlet parenthesised = false;\n\t\t\t\tlet charIndex = this.start;\n\t\t\t\twhile ( charIndex < this.params[0].start ) {\n\t\t\t\t\tif ( code.original[ charIndex ] === '(' ) {\n\t\t\t\t\t\tparenthesised = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( !parenthesised ) {\n\t\t\t\t\tcode.insert( this.start, '( ' );\n\t\t\t\t}\n\n\t\t\t\tcharIndex = this.params[ this.params.length -1 ].end;\n\t\t\t\twhile ( code.original[ charIndex ] !== '=' ) charIndex += 1;\n\n\t\t\t\t// remove the `=> `\n\t\t\t\tcode.overwrite( charIndex, this.body.start, parenthesised ? '' : ') ' );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.body.synthetic ) {\n\t\t\tif ( find( this.params, param => param.type === 'RestElement' || /Pattern/.test( param.type ) ) ) {\n\t\t\t\tconst indentation = this.getIndentation();\n\t\t\t\tcode.insert( this.body.start, `{\\n${indentation}${code.getIndentString()}` );\n\t\t\t\tsuper.transpile( code, transforms );\n\t\t\t\tcode.insert( this.body.end, `;\\n${indentation}}` );\n\t\t\t}\n\n\t\t\telse if ( transforms.arrow ) {\n\t\t\t\tcode.insert( this.body.start, `{ ` );\n\t\t\t\tsuper.transpile( code, transforms );\n\t\t\t\tcode.insert( this.body.end, `; }` );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tsuper.transpile( code, transforms );\n\t\t}\n\t}\n}\n","export default function locate ( source, index ) {\n\tvar lines = source.split( '\\n' );\n\tvar len = lines.length;\n\n\tvar lineStart = 0;\n\tvar i;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tvar line = lines[i];\n\t\tvar lineEnd =  lineStart + line.length + 1; // +1 for newline\n\n\t\tif ( lineEnd > index ) {\n\t\t\treturn { line: i + 1, column: index - lineStart, char: i };\n\t\t}\n\n\t\tlineStart = lineEnd;\n\t}\n\n\tthrow new Error( 'Could not determine location of character' );\n}\n","function pad ( num, len ) {\n\tlet result = String( num );\n\treturn result + repeat( ' ', len - result.length );\n}\n\nfunction repeat ( str, times ) {\n\tlet result = '';\n\twhile ( times-- ) result += str;\n\treturn result;\n}\n\nexport default function getSnippet ( source, loc, length = 1 ) {\n\tconst first = Math.max( loc.line - 5, 0 );\n\tconst last = loc.line;\n\n\tconst numDigits = String( last ).length;\n\n\tconst lines = source.split( '\\n' ).slice( first, last );\n\n\tconst lastLine = lines[ lines.length - 1 ];\n\tconst offset = lastLine.slice( 0, loc.column ).replace( /\\t/g, '  ' ).length;\n\n\tlet snippet = lines\n\t\t.map( ( line, i ) => `${pad( i + first + 1, numDigits )} : ${line.replace( /\\t/g, '  ')}` )\n\t\t.join( '\\n' );\n\n\tsnippet += '\\n' + repeat( ' ', numDigits + 3 + offset ) + repeat( '^', length );\n\n\treturn snippet;\n}\n","import locate from './locate.js';\nimport getSnippet from './getSnippet.js';\n\nexport default class CompileError extends Error {\n\tconstructor ( node, message ) {\n\t\tsuper();\n\n\t\tconst source = node.program.magicString.original;\n\t\tconst loc = locate( source, node.start );\n\n\t\tthis.name = 'CompileError';\n\t\tthis.message = message + ` (${loc.line}:${loc.column})`;\n\n\t\tthis.stack = new Error().stack.replace( new RegExp( `.+new ${this.name}.+\\\\n`, 'm' ), '' );\n\n\t\tthis.loc = loc;\n\t\tthis.snippet = getSnippet( source, loc, node.end - node.start );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class AssignmentExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.left.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.left.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this.left, `${this.left.name} is read-only` );\n\t\t\t}\n\n\t\t\t// special case – https://gitlab.com/Rich-Harris/buble/issues/11\n\t\t\tconst statement = declaration && declaration.node.ancestor( 3 );\n\t\t\tif ( statement && statement.type === 'ForStatement' && statement.body.contains( this ) ) {\n\t\t\t\tstatement.reassigned[ this.left.name ] = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( /Pattern/.test( this.left.type ) ) {\n\t\t\tthrow new CompileError( this.left, 'Destructuring assignments are not currently supported. Coming soon!' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.operator === '**=' && transforms.exponentiation ) {\n\t\t\tconst scope = this.findScope( false );\n\t\t\tconst getAlias = name => {\n\t\t\t\tconst declaration = scope.findDeclaration( name );\n\t\t\t\treturn declaration ? declaration.name : name;\n\t\t\t};\n\n\t\t\t// first, the easy part – `**=` -> `=`\n\t\t\tlet charIndex = this.left.end;\n\t\t\twhile ( code.original[ charIndex ] !== '*' ) charIndex += 1;\n\t\t\tcode.remove( charIndex, charIndex + 2 );\n\n\t\t\t// how we do the next part depends on a number of factors – whether\n\t\t\t// this is a top-level statement, and whether we're updating a\n\t\t\t// simple or complex reference\n\t\t\tlet base;\n\n\t\t\tlet left = this.left;\n\t\t\twhile ( left.type === 'ParenthesizedExpression' ) left = left.expression;\n\n\t\t\tif ( left.type === 'Identifier' ) {\n\t\t\t\tbase = getAlias( left.name );\n\t\t\t} else if ( left.type === 'MemberExpression' ) {\n\t\t\t\tlet object;\n\t\t\t\tlet needsObjectVar = false;\n\t\t\t\tlet property;\n\t\t\t\tlet needsPropertyVar = false;\n\n\t\t\t\tconst statement = this.findNearest( /(?:Statement|Declaration)$/ );\n\t\t\t\tconst i0 = statement.getIndentation();\n\n\t\t\t\tif ( left.property.type === 'Identifier' ) {\n\t\t\t\t\tproperty = left.computed ? getAlias( left.property.name ) : left.property.name;\n\t\t\t\t} else {\n\t\t\t\t\tproperty = scope.createIdentifier( 'property' );\n\t\t\t\t\tneedsPropertyVar = true;\n\t\t\t\t}\n\n\t\t\t\tif ( left.object.type === 'Identifier' ) {\n\t\t\t\t\tobject = getAlias( left.object.name );\n\t\t\t\t} else {\n\t\t\t\t\tobject = scope.createIdentifier( 'object' );\n\t\t\t\t\tneedsObjectVar = true;\n\t\t\t\t}\n\n\t\t\t\tif ( left.start === statement.start ) {\n\t\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\n\t\t\t\t\t\tcode.insert( statement.start, `var ${object} = ` );\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `;\\n${i0}var ${property} = ` );\n\t\t\t\t\t\tcode.overwrite( left.property.end, left.end, `;\\n${i0}${object}[${property}]` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsObjectVar ) {\n\t\t\t\t\t\tcode.insert( statement.start, `var ${object} = ` );\n\t\t\t\t\t\tcode.insert( left.object.end, `;\\n${i0}` );\n\t\t\t\t\t\tcode.insert( left.object.end, object );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsPropertyVar ) {\n\t\t\t\t\t\tcode.insert( statement.start, `var ${property} = ` );\n\t\t\t\t\t\tcode.move( left.property.start, left.property.end, statement.start );\n\t\t\t\t\t\tcode.insert( statement.start, `;\\n${i0}` );\n\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `[${property}]` );\n\t\t\t\t\t\tcode.remove( left.property.end, left.end );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tlet declarators = [];\n\t\t\t\t\tif ( needsObjectVar ) declarators.push( object );\n\t\t\t\t\tif ( needsPropertyVar ) declarators.push( property );\n\t\t\t\t\tcode.insert( statement.start, `var ${declarators.join( ', ' )};\\n${i0}` );\n\n\t\t\t\t\tcode.insert( left.start, `( ` );\n\n\t\t\t\t\tif ( needsObjectVar && needsPropertyVar ) {\n\t\t\t\t\t\tcode.insert( left.start, `${object} = ` );\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `, ${property} = ` );\n\t\t\t\t\t\tcode.overwrite( left.property.end, left.end, `, ${object}[${property}]` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsObjectVar ) {\n\t\t\t\t\t\tcode.insert( left.start, `${object} = ` );\n\t\t\t\t\t\tcode.insert( left.object.end, `, ${object}` );\n\t\t\t\t\t}\n\n\t\t\t\t\telse if ( needsPropertyVar ) {\n\t\t\t\t\t\tcode.insert( left.start, `${property} = ` );\n\t\t\t\t\t\tcode.move( left.property.start, left.property.end, left.start );\n\t\t\t\t\t\tcode.insert( left.start, `, ` );\n\t\t\t\t\t\tcode.overwrite( left.object.end, left.property.start, `[${property}]` );\n\t\t\t\t\t\tcode.remove( left.property.end, left.end );\n\t\t\t\t\t}\n\n\t\t\t\t\tcode.insert( this.end, ` )` );\n\t\t\t\t}\n\n\t\t\t\tbase = object + ( left.computed || needsPropertyVar ? `[${property}]` : `.${property}` );\n\t\t\t}\n\n\t\t\tcode.insert( this.right.start, `Math.pow( ${base}, ` );\n\t\t\tcode.insert( this.right.end, ` )` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class BinaryExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( this.operator === '**' && transforms.exponentiation ) {\n\t\t\tcode.insert ( this.start, `Math.pow( ` );\n\t\t\tcode.overwrite( this.left.end, this.right.start, `, ` );\n\t\t\tcode.insert ( this.end, ` )` );\n\t\t}\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class BreakStatement extends Node {\n\tinitialise ( transforms ) {\n\t\tconst loop = this.findNearest( /(?:For(?:In)?|While)Statement/ );\n\t\tconst switchCase = this.findNearest( 'SwitchCase' );\n\n\t\tif ( loop && ( !switchCase || loop.depth > switchCase.depth ) ) {\n\t\t\tloop.canBreak = true;\n\t\t\tthis.loop = loop;\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.loop && this.loop.shouldRewriteAsFunction ) {\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\n\t\t\tcode.overwrite( this.start, this.start + 5, `return 'break'` );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class CallExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.spreadRest ) {\n\t\t\tconst lastArgument = this.arguments[ this.arguments.length - 1 ];\n\t\t\tif ( lastArgument && lastArgument.type === 'SpreadElement' ) {\n\t\t\t\t// TODO expression callee (`(a || b)(...values)`)\n\n\t\t\t\tlet context;\n\n\t\t\t\tif ( this.callee.type === 'MemberExpression' ) {\n\t\t\t\t\tif ( this.callee.object.type === 'Identifier' ) {\n\t\t\t\t\t\tcontext = this.callee.object.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new CompileError( lastArgument, 'Calling members of expressions with a spread operator is not currently supported' );\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext = 'void 0';\n\t\t\t\t}\n\n\t\t\t\tcode.insert( this.callee.end, '.apply' );\n\n\t\t\t\tconst penultimateArgument = this.arguments[ this.arguments.length - 2 ];\n\n\t\t\t\tif ( penultimateArgument ) {\n\t\t\t\t\tcode.insert( this.arguments[0].start, `${context}, [ ` );\n\t\t\t\t\tcode.overwrite( penultimateArgument.end, lastArgument.start, ` ].concat( ` );\n\t\t\t\t\tcode.insert( lastArgument.end, ` )` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( lastArgument.start, `${context}, ` );\n\t\t\t\t}\n\n\t\t\t\tcode.remove( lastArgument.start, lastArgument.start + 3 );\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport { findIndex } from '../../utils/array.js';\n\n// TODO this code is pretty wild, tidy it up\nexport default class ClassBody extends Node {\n\ttranspile ( code, transforms, inFunctionExpression, superName ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst name = this.parent.name;\n\n\t\t\tconst indentStr = code.getIndentString();\n\t\t\tlet indentation = this.getIndentation() + ( inFunctionExpression ? indentStr : '' );\n\n\t\t\tconst constructorIndex = findIndex( this.body, node => node.kind === 'constructor' );\n\t\t\tconst constructor = this.body[ constructorIndex ];\n\n\t\t\tif ( this.body.length ) {\n\t\t\t\tcode.remove( this.start, this.body[0].start );\n\t\t\t\tcode.remove( this.body[ this.body.length - 1 ].end, this.end );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.start, this.end );\n\t\t\t}\n\n\t\t\tif ( constructor ) {\n\t\t\t\tconst previousMethod = this.body[ constructorIndex - 1 ];\n\t\t\t\tconst nextMethod = this.body[ constructorIndex + 1 ];\n\n\t\t\t\t// ensure constructor is first\n\t\t\t\tif ( constructorIndex > 0 ) {\n\t\t\t\t\tcode.remove( previousMethod.end, constructor.start );\n\t\t\t\t\tcode.move( constructor.start, nextMethod ? nextMethod.start : this.end - 1, this.body[0].start );\n\t\t\t\t}\n\n\t\t\t\tif ( !inFunctionExpression ) code.insert( constructor.end, ';' );\n\n\t\t\t\tif ( constructorIndex > 0 ) {\n\t\t\t\t\tif ( nextMethod ) {\n\t\t\t\t\t\tcode.insert( nextMethod.start, `\\n\\n${indentation}` );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.insert( constructor.end, `\\n\\n${indentation}` );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst fn = `function ${name} () {` + ( superName ?\n\t\t\t\t\t`\\n${indentation}${indentStr}${superName}.apply(this, arguments);\\n${indentation}}` :\n\t\t\t\t\t`}` ) + ( inFunctionExpression ? '' : ';' ) + ( this.body.length ? `\\n\\n${indentation}` : '' );\n\t\t\t\tcode.insert( this.start, fn );\n\t\t\t}\n\n\t\t\tif ( this.parent.superClass ) {\n\t\t\t\tlet inheritanceBlock = `${name}.prototype = Object.create( ${superName} && ${superName}.prototype );\\n${indentation}${name}.prototype.constructor = ${name};`;\n\n\t\t\t\tif ( constructor ) {\n\t\t\t\t\tcode.insert( constructor.end, `\\n\\n${indentation}` + inheritanceBlock );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( this.start, inheritanceBlock + `\\n\\n${indentation}` );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst scope = this.findScope( false );\n\n\t\t\tlet gettersAndSetters = [];\n\t\t\tlet accessors;\n\n\t\t\tthis.body.forEach( method => {\n\t\t\t\tif ( method.kind === 'constructor' ) {\n\t\t\t\t\tcode.overwrite( method.key.start, method.key.end, `function ${name}` );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst isAccessor = method.kind === 'get' || method.kind === 'set';\n\n\t\t\t\tif ( isAccessor ) {\n\t\t\t\t\tcode.remove( method.start, method.key.end );\n\n\t\t\t\t\tif ( !~gettersAndSetters.indexOf( method.key.name ) ) gettersAndSetters.push( method.key.name );\n\t\t\t\t\tif ( !accessors ) accessors = scope.createIdentifier( 'accessors' );\n\t\t\t\t}\n\n\t\t\t\tif ( method.static ) code.remove( method.start, method.start + 7 );\n\n\t\t\t\tconst lhs = method.static ?\n\t\t\t\t\t`${name}.${method.key.name}` :\n\t\t\t\t\tmethod.kind === 'method' ?\n\t\t\t\t\t\t`${name}.prototype.${method.key.name}` :\n\t\t\t\t\t\t`${accessors}.${method.key.name}.${method.kind}`;\n\n\t\t\t\tcode.insert( method.start, `${lhs} = function` + ( method.value.generator ? '*' : '' ) + ( isAccessor ? '' : ' ' ) );\n\t\t\t\tcode.insert( method.end, ';' );\n\n\t\t\t\tif ( method.value.generator ) code.remove( method.start, method.key.start );\n\n\t\t\t\t// prevent function name shadowing an existing declaration\n\t\t\t\tif ( scope.contains( method.key.name ) ) {\n\t\t\t\t\tcode.overwrite( method.key.start, method.key.end, scope.createIdentifier( method.key.name ), true );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif ( gettersAndSetters.length ) {\n\t\t\t\tconst intro = `var ${accessors} = { ${\n\t\t\t\t\tgettersAndSetters.map( name => `${name}: {}` ).join( ',' )\n\t\t\t\t} };`;\n\n\t\t\t\tconst outro = `Object.defineProperties( ${name}.prototype, ${accessors} );`;\n\n\t\t\t\tif ( constructor ) {\n\t\t\t\t\tcode.insert( constructor.end, `\\n\\n${indentation}${intro}` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( this.start, `${intro}\\n\\n${indentation}` );\n\t\t\t\t}\n\n\t\t\t\tcode.insert( this.end, `\\n\\n${indentation}${outro}` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","// TODO this function is slightly flawed – it works on the original string,\n// not its current edited state.\n// That's not a problem for the way that it's currently used, but it could\n// be in future...\nexport default function deindent ( node, code ) {\n\tconst start = node.start;\n\tconst end = node.end;\n\n\tconst indentStr = code.getIndentString();\n\tconst pattern = new RegExp( indentStr + '\\\\S', 'g' );\n\n\tif ( code.original.slice( start - indentStr.length, start ) === indentStr ) {\n\t\tcode.remove( start - indentStr.length, start );\n\t}\n\n\tconst slice = code.original.slice( start, end );\n\tlet match;\n\twhile ( match = pattern.exec( slice ) ) {\n\t\tif ( !node.program.indentExclusions[ match.index ] ) code.remove( start + match.index, start + match.index + indentStr.length );\n\t}\n}\n","import Node from '../Node.js';\nimport deindent from '../../utils/deindent.js';\n\nexport default class ClassDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.name = this.id.name;\n\t\tthis.findScope( true ).addDeclaration( this.id, 'class' );\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tif ( !this.superClass ) deindent( this.body, code );\n\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\n\n\t\t\tconst indentation = this.getIndentation();\n\t\t\tconst indentStr = code.getIndentString();\n\n\t\t\tcode.overwrite( this.start, this.id.start, 'var ' );\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.overwrite( this.id.end, this.superClass.start, ' = ' );\n\t\t\t\tcode.overwrite( this.superClass.end, this.body.start, `(function (${superName}) {\\n${indentation}${indentStr}` );\n\t\t\t} else {\n\t\t\t\tcode.overwrite( this.id.end, this.body.start, ' = ' );\n\t\t\t}\n\n\t\t\tthis.body.transpile( code, transforms, !!this.superClass, superName );\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.insert( this.end, `\\n\\n${indentation}${indentStr}return ${this.name};\\n${indentation}}(` );\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\n\t\t\t\tcode.insert( this.end, '));' );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.body.transpile( code, transforms, false, null );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ClassExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.name = this.id ? this.id.name :\n\t\t            this.parent.type === 'VariableDeclarator' ? this.parent.id.name :\n\t\t            this.parent.type === 'AssignmentExpression' ? this.parent.left.name :\n\t\t            this.findScope( true ).createIdentifier( 'anonymous' );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst superName = this.superClass && ( this.superClass.name || 'superclass' );\n\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.remove( this.start, this.superClass.start );\n\t\t\t\tcode.remove( this.superClass.end, this.body.start );\n\t\t\t\tcode.insert( this.start, `(function (${superName}) {\\n${i1}` );\n\t\t\t} else {\n\t\t\t\tcode.overwrite( this.start, this.body.start, `(function () {\\n${i1}` );\n\t\t\t}\n\n\t\t\tthis.body.transpile( code, transforms, true, superName );\n\n\t\t\tconst outro = `\\n\\n${i1}return ${this.name};\\n${i0}}(`;\n\n\t\t\tif ( this.superClass ) {\n\t\t\t\tcode.insert( this.end, outro );\n\t\t\t\tcode.move( this.superClass.start, this.superClass.end, this.end );\n\t\t\t\tcode.insert( this.end, '))' );\n\t\t\t} else {\n\t\t\t\tcode.insert( this.end, `\\n\\n${i1}return ${this.name};\\n${i0}}())` );\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tthis.body.transpile( code, transforms, false );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ContinueStatement extends Node {\n\ttranspile ( code, transforms ) {\n\t\tconst loop = this.findNearest( /(?:For(?:In)?|While)Statement/ );\n\t\tif ( loop.shouldRewriteAsFunction ) {\n\t\t\tif ( this.label ) throw new CompileError( this, 'Labels are not currently supported in a loop with locally-scoped variables' );\n\t\t\tcode.overwrite( this.start, this.start + 8, 'return' );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportDefaultDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tsuper.transpile( code, transforms );\n\n\t\tif ( this.declaration.type === 'ClassDeclaration' ) {\n\t\t\tcode.insert( this.end, `\\n\\n${this.getIndentation()}` );\n\t\t\tcode.move( this.start, this.declaration.start, this.end );\n\t\t\tcode.insert( this.end, `${this.declaration.id.name};` );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ExportNamedDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleExport ) throw new CompileError( this, 'export is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","export default function extractNames ( node ) {\n\tconst names = [];\n\textractors[ node.type ]( names, node );\n\treturn names;\n}\n\nconst extractors = {\n\tIdentifier ( names, param ) {\n\t\tnames.push( param.name );\n\t},\n\n\tObjectPattern ( names, param ) {\n\t\tfor ( const prop of param.properties ) {\n\t\t\textractors[ prop.value.type ]( names, prop.value );\n\t\t}\n\t},\n\n\tArrayPattern ( names, param ) {\n\t\tfor ( const element of param.elements )  {\n\t\t\tif ( element ) extractors[ element.type ]( names, element );\n\t\t}\n\t},\n\n\tRestElement ( names, param ) {\n\t\textractors[ param.argument.type ]( names, param.argument );\n\t},\n\n\tAssignmentPattern ( names, param ) {\n\t\textractors[ param.left.type ]( names, param.left );\n\t}\n};\n","import Node from '../../Node.js';\nimport extractNames from '../../extractNames.js';\n\nexport default class LoopStatement extends Node {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\tinitialise ( transforms ) {\n\t\tthis.body.createScope();\n\t\tthis.createdScope = true;\n\n\t\t// this is populated as and when reassignments occur\n\t\tthis.reassigned = Object.create( null );\n\t\tthis.aliases = Object.create( null );\n\n\t\tsuper.initialise( transforms );\n\n\t\tif ( transforms.letConst ) {\n\t\t\t// see if any block-scoped declarations are referenced\n\t\t\t// inside function expressions\n\t\t\tconst names = Object.keys( this.body.scope.declarations );\n\n\t\t\tlet i = names.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tconst name = names[i];\n\t\t\t\tconst declaration = this.body.scope.declarations[ name ];\n\n\t\t\t\tlet j = declaration.instances.length;\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\tconst instance = declaration.instances[j];\n\t\t\t\t\tconst nearestFunctionExpression = instance.findNearest( /Function/ );\n\n\t\t\t\t\tif ( nearestFunctionExpression && nearestFunctionExpression.depth > this.depth ) {\n\t\t\t\t\t\tthis.shouldRewriteAsFunction = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( this.shouldRewriteAsFunction ) break;\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\tconst i0 = this.getIndentation();\n\t\t\tconst i1 = i0 + code.getIndentString();\n\n\t\t\tconst argString = this.args ? ` ${this.args.join( ', ' )} ` : '';\n\t\t\tconst paramString = this.params ? ` ${this.params.join( ', ' )} ` : '';\n\n\t\t\tconst functionScope = this.findScope( true );\n\t\t\tconst loop = functionScope.createIdentifier( 'loop' );\n\n\t\t\tconst before = `var ${loop} = function (${paramString}) ` + ( this.body.synthetic ? `{\\n${i0}${code.getIndentString()}` : '' );\n\t\t\tconst after = ( this.body.synthetic ? `\\n${i0}}` : '' ) + `;\\n\\n${i0}`;\n\n\t\t\tcode.insert( this.start, before );\n\t\t\tcode.move( this.body.start, this.body.end, this.start );\n\t\t\tcode.insert( this.start, after );\n\n\t\t\tconst index = this.type === 'DoWhileStatement' ?\n\t\t\t\tthis.start + 2 :\n\t\t\t\tthis.end;\n\n\t\t\tif ( this.canBreak || this.canReturn ) {\n\t\t\t\tconst returned = functionScope.createIdentifier( 'returned' );\n\n\t\t\t\tlet insert = `{\\n${i1}var ${returned} = ${loop}(${argString});\\n`;\n\t\t\t\tif ( this.canBreak ) insert += `\\n${i1}if ( ${returned} === 'break' ) break;`;\n\t\t\t\tif ( this.canReturn ) insert += `\\n${i1}if ( ${returned} ) return returned.v;`;\n\t\t\t\tinsert += `\\n${i0}}`;\n\n\t\t\t\tcode.insert( index, insert );\n\t\t\t} else {\n\t\t\t\tconst callExpression = `${loop}(${argString});`;\n\n\t\t\t\tif ( this.type === 'DoWhileStatement' ) {\n\t\t\t\t\tcode.overwrite( this.start, this.body.start, `do {\\n${i1}${callExpression}\\n${i0}}` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( index, callExpression );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForStatement extends LoopStatement {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tconst i1 = this.getIndentation() + code.getIndentString();\n\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = this.init.type === 'VariableDeclaration' ?\n\t\t\t\t[].concat.apply( [], this.init.declarations.map( declarator => extractNames( declarator.id ) ) ) :\n\t\t\t\t[];\n\n\t\t\tconst aliases = this.aliases;\n\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\n\n\t\t\tconst updates = Object.keys( this.reassigned )\n\t\t\t\t.map( name => `${aliases[ name ].outer} = ${aliases[ name ].inner};` );\n\n\t\t\tif ( updates.length ) {\n\t\t\t\tif ( this.body.synthetic ) {\n\t\t\t\t\tcode.insert( this.body.body[0].end, `; ${updates.join(` `)}` );\n\t\t\t\t} else {\n\t\t\t\t\tconst lastStatement = this.body.body[ this.body.body.length - 1 ];\n\t\t\t\t\tcode.insert( lastStatement.end, `\\n\\n${i1}${updates.join(`\\n${i1}`)}` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport extractNames from '../extractNames.js';\n\nexport default class ForInStatement extends LoopStatement {\n\tfindScope ( functionScope ) {\n\t\treturn functionScope || !this.createdScope ? this.parent.findScope( functionScope ) : this.body.scope;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.shouldRewriteAsFunction ) {\n\t\t\t// which variables are declared in the init statement?\n\t\t\tconst names = this.left.type === 'VariableDeclaration' ?\n\t\t\t\t[].concat.apply( [], this.left.declarations.map( declarator => extractNames( declarator.id ) ) ) :\n\t\t\t\t[];\n\n\t\t\tthis.args = names.map( name => name in this.aliases ? this.aliases[ name ].outer : name );\n\t\t\tthis.params = names.map( name => name in this.aliases ? this.aliases[ name ].inner : name );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import LoopStatement from './shared/LoopStatement.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ForOfStatement extends LoopStatement {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.forOf && !transforms.dangerousForOf ) throw new CompileError( this, 'for...of statements are not supported. Use `transforms: { forOf: false }` to skip transformation and disable this error, or `transforms: { dangerousForOf: true }` if you know what you\\'re doing' );\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( !transforms.dangerousForOf ) {\n\t\t\tsuper.transpile( code, transforms );\n\t\t\treturn;\n\t\t}\n\n\t\tconst scope = this.findScope( true );\n\t\tconst i0 = this.getIndentation();\n\t\tconst i1 = i0 + code.getIndentString();\n\n\t\tconst key = scope.createIdentifier( 'i' );\n\t\tconst list = scope.createIdentifier( 'list' );\n\n\t\tif ( this.body.synthetic ) {\n\t\t\tcode.insert( this.body.body[0].start, `{\\n${i1}` );\n\t\t\tcode.insert( this.body.body[0].end, `\\n${i0}}` );\n\t\t}\n\n\t\t// this is rather finicky, owing to magic-string's quirks\n\t\tconst bodyStart = this.body.body[0].start;\n\t\tlet startIndex = this.left.start;\n\t\twhile ( code.original[ startIndex - 1 ] !== '(' ) startIndex -= 1;\n\n\t\tcode.remove( this.left.end, this.right.start );\n\t\tcode.remove( startIndex, this.left.start );\n\t\tcode.remove( this.start + 3, startIndex );\n\n\t\tcode.insert( startIndex, ` ( var ${key} = 0, ${list} = ` );\n\n\t\tcode.move( this.left.start, this.left.end, bodyStart );\n\t\tcode.move( this.right.start, this.right.end, startIndex );\n\t\tcode.insert( startIndex, `; ${key} < ${list}.length; ${key} += 1` );\n\t\tcode.insert( bodyStart, ` = ${list}[${key}];\\n\\n${i1}` );\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class FunctionDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.generator && transforms.generator ) {\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tthis.findScope( true ).addDeclaration( this.id, 'function' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class FunctionExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.generator && transforms.generator ) {\n\t\t\tthrow new CompileError( this, 'Generators are not supported' );\n\t\t}\n\n\t\tthis.body.createScope();\n\n\t\tif ( this.id ) {\n\t\t\t// function expression IDs belong to the child scope...\n\t\t\tthis.body.scope.addDeclaration( this.id, 'function' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n}\n","export default function isReference ( node, parent ) {\n\tif ( node.type === 'MemberExpression' ) {\n\t\treturn !node.computed && isReference( node.object, node );\n\t}\n\n\tif ( node.type === 'Identifier' ) {\n\t\t// the only time we could have an identifier node without a parent is\n\t\t// if it's the entire body of a function without a block statement –\n\t\t// i.e. an arrow function expression like `a => a`\n\t\tif ( !parent ) return true;\n\n\t\t// TODO is this right?\n\t\tif ( parent.type === 'MemberExpression' || parent.type === 'MethodDefinition' ) {\n\t\t\treturn parent.computed || node === parent.object;\n\t\t}\n\n\t\t// disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n\t\tif ( parent.type === 'Property' ) return parent.computed || node === parent.value;\n\n\t\t// disregard the `bar` in `class Foo { bar () {...} }`\n\t\tif ( parent.type === 'MethodDefinition' ) return false;\n\n\t\t// disregard the `bar` in `export { foo as bar }`\n\t\tif ( parent.type === 'ExportSpecifier' && node !== parent.local ) return;\n\n\t\treturn true;\n\t}\n}\n","import Node from '../Node.js';\nimport isReference from '../../utils/isReference.js';\n\nexport default class Identifier extends Node {\n\tfindScope ( functionScope ) {\n\t\tif ( this.parent.params && ~this.parent.params.indexOf( this ) ) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\tif ( this.parent.type === 'FunctionExpression' && this === this.parent.id ) {\n\t\t\treturn this.parent.body.scope;\n\t\t}\n\n\t\treturn this.parent.findScope( functionScope\t);\n\t}\n\n\tinitialise ( transforms ) {\n\t\tif ( transforms.arrow && isReference( this, this.parent ) ) {\n\t\t\tif ( this.name === 'arguments' && !this.findScope( false ).contains( this.name ) ) {\n\t\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\n\t\t\t\tconst loop = this.findNearest( /(?:For|While)Statement/ );\n\n\t\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\n\t\t\t\tif ( loop && loop.depth > lexicalBoundary.depth ) {\n\t\t\t\t\tthis.alias = lexicalBoundary.getArgumentsAlias();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.findScope( false ).addReference( this );\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.alias ) {\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class ImportDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.moduleImport ) throw new CompileError( this, 'import is not supported' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportDefaultSpecifier extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ImportSpecifier extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.findScope( true ).addDeclaration( this.local, 'import' );\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Literal extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.numericLiteral ) {\n\t\t\tconst leading = this.raw.slice( 0, 2 );\n\t\t\tif ( leading === '0b' || leading === '0o' ) {\n\t\t\t\tcode.overwrite( this.start, this.end, String( this.value ), true );\n\t\t\t}\n\t\t}\n\n\t\tif ( this.regex ) {\n\t\t\tif ( transforms.unicodeRegExp && /u/.test( this.regex.flags ) ) throw new CompileError( this, 'Regular expression unicode flag is not supported' );\n\t\t\tif ( transforms.stickyRegExp && /y/.test( this.regex.flags ) ) throw new CompileError( this, 'Regular expression sticky flag is not supported' );\n\t\t}\n\t}\n}\n","let reserved = Object.create( null );\n'do if in for let new try var case else enum eval null this true void with await break catch class const false super throw while yield delete export import public return static switch typeof default extends finally package private continue debugger function arguments interface protected implements instanceof'.split( ' ' )\n\t.forEach( word => reserved[ word ] = true );\n\nexport default reserved;\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\n\nexport default class MemberExpression extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.reservedProperties && reserved[ this.property.name ] ) {\n\t\t\tcode.overwrite( this.object.end, this.property.start, `['` );\n\t\t\tcode.insert( this.property.end, `']` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\nimport reserved from '../../utils/reserved.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Property extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.computed && transforms.computedProperty ) {\n\t\t\tthrow new CompileError( this.key, 'Computed properties are not supported' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.conciseMethodProperty && this.parent.type !== 'ObjectPattern' ) {\n\t\t\tif ( this.shorthand ) {\n\t\t\t\tcode.insert( this.start, `${this.key.name}: ` );\n\t\t\t} else if ( this.method ) {\n\t\t\t\tconst name = this.findScope( true ).createIdentifier( this.key.name );\n\t\t\t\tif ( this.value.generator ) code.remove( this.start, this.key.start );\n\t\t\t\tcode.insert( this.key.end, `: function${this.value.generator ? '*' : ''} ${name}` );\n\t\t\t}\n\t\t}\n\n\t\tif ( transforms.reservedProperties && reserved[ this.key.name ] ) {\n\t\t\tcode.insert( this.key.start, `'` );\n\t\t\tcode.insert( this.key.end, `'` );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ReturnStatement extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.loop = this.findNearest( /(?:For(?:In)?|While)Statement/ );\n\t\tthis.nearestFunction = this.findNearest( /Function/ );\n\n\t\tif ( this.loop && ( !this.nearestFunction || this.loop.depth > this.nearestFunction.depth ) ) {\n\t\t\tthis.loop.canReturn = true;\n\t\t\tthis.shouldWrap = true;\n\t\t}\n\n\t\tif ( this.argument ) this.argument.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.argument ) {\n\t\t\tconst shouldWrap = this.shouldWrap && this.loop && this.loop.shouldRewriteAsFunction;\n\t\t\tif ( shouldWrap ) code.insert( this.argument.start, `{ v: ` );\n\n\t\t\tif ( this.argument ) this.argument.transpile( code, transforms );\n\n\t\t\tif ( shouldWrap ) code.insert( this.argument.end, ` }` );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class Super extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tthis.method = this.findNearest( 'MethodDefinition' );\n\t\t\tif ( !this.method ) throw new CompileError( this, 'use of super outside class method' );\n\n\t\t\tconst parentClass = this.findNearest( 'ClassBody' ).parent;\n\t\t\tthis.superClassName = parentClass.superClass && parentClass.superClass.name;\n\n\t\t\tif ( !this.superClassName ) throw new CompileError( this, 'super used in base class' );\n\n\t\t\tthis.isCalled = this.parent.type === 'CallExpression' && this === this.parent.callee;\n\n\t\t\tif ( this.method.kind !== 'constructor' && this.isCalled ) {\n\t\t\t\tthrow new CompileError( this, 'super() not allowed outside class constructor' );\n\t\t\t}\n\n\t\t\tthis.isMember = this.parent.type === 'MemberExpression';\n\n\t\t\tif ( !this.isCalled && !this.isMember ) {\n\t\t\t\tthrow new CompileError( this, 'Unexpected use of `super` (expected `super(...)` or `super.*`)' );\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.classes ) {\n\t\t\tconst expression = this.isCalled ? this.superClassName : `${this.superClassName}.prototype`;\n\t\t\tcode.overwrite( this.start, this.end, expression, true );\n\n\t\t\tconst callExpression = this.isCalled ? this.parent : this.parent.parent;\n\n\t\t\tif ( callExpression && callExpression.type === 'CallExpression' ) {\n\t\t\t\tcode.insert( callExpression.callee.end, '.call' );\n\n\t\t\t\tif ( callExpression.arguments.length ) {\n\t\t\t\t\tcode.insert( callExpression.arguments[0].start, `this, ` );\n\t\t\t\t} else {\n\t\t\t\t\tcode.insert( callExpression.end - 1, `this` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class TaggedTemplateExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.templateString && !transforms.dangerousTaggedTemplateString ) {\n\t\t\tthrow new CompileError( this, 'Tagged template strings are not supported. Use `transforms: { templateString: false }` to skip transformation and disable this error, or `transforms: { dangerousTaggedTemplateString: true }` if you know what you\\'re doing' );\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.templateString && transforms.dangerousTaggedTemplateString ) {\n\t\t\tconst ordered = this.quasi.expressions.concat( this.quasi.quasis ).sort( ( a, b ) => a.start - b.start );\n\n\t\t\t// insert strings at start\n\t\t\tconst templateStrings = this.quasi.quasis.map( quasi => JSON.stringify( quasi.value.cooked ) );\n\t\t\tcode.overwrite( this.tag.end, ordered[0].start, `([${templateStrings.join(', ')}]` );\n\n\t\t\tlet lastIndex = ordered[0].start;\n\t\t\tordered.forEach( node => {\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\n\t\t\t\t\tcode.remove( lastIndex, node.end );\n\t\t\t\t} else {\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, ', ' );\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tcode.overwrite( lastIndex, this.end, ')' );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateElement extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.program.templateElements.push( this );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class TemplateLiteral extends Node {\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.templateString && this.parent.type !== 'TaggedTemplateExpression' ) {\n\t\t\tcode.remove( this.start, this.start + 1 );\n\t\t\tcode.remove( this.end - 1, this.end );\n\n\t\t\tconst ordered = this.expressions.concat( this.quasis ).sort( ( a, b ) => a.start - b.start );\n\n\t\t\tconst parenthesise = this.parent.type !== 'AssignmentExpression' &&\n\t\t\t                     this.parent.type !== 'VariableDeclarator' &&\n\t\t\t                     ( this.parent.type !== 'BinaryExpression' || this.parent.operator !== '+' );\n\n\t\t\tif ( parenthesise ) code.insert( this.start, '(' );\n\n\t\t\tlet lastIndex = this.start;\n\t\t\tlet closeParenthesis = false;\n\n\t\t\tordered.forEach( ( node, i ) => {\n\t\t\t\tif ( node.type === 'TemplateElement' ) {\n\t\t\t\t\tconst stringified = JSON.stringify( node.value.cooked );\n\t\t\t\t\tconst replacement = ( closeParenthesis ? ')' : '' ) + ( ( node.tail && !node.value.cooked.length && i !== 0 ) ? '' : `${i ? ' + ' : ''}${stringified}` );\n\t\t\t\t\tcode.overwrite( lastIndex, node.end, replacement );\n\n\t\t\t\t\tcloseParenthesis = false;\n\t\t\t\t} else {\n\t\t\t\t\tconst parenthesise = node.type !== 'Identifier'; // TODO other cases where it's safe\n\t\t\t\t\tconst open = parenthesise ? ( i ? ' + (' : '(' ) : ' + ';\n\n\t\t\t\t\tcode.overwrite( lastIndex, node.start, open );\n\n\t\t\t\t\tcloseParenthesis = parenthesise;\n\t\t\t\t}\n\n\t\t\t\tlastIndex = node.end;\n\t\t\t});\n\n\t\t\tcode.overwrite( lastIndex, this.end, parenthesise ? ')' : '' );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class ThisExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( transforms.arrow ) {\n\t\t\tconst lexicalBoundary = this.findLexicalBoundary();\n\t\t\tconst arrowFunction = this.findNearest( 'ArrowFunctionExpression' );\n\t\t\tconst loop = this.findNearest( /(?:For|While)Statement/ );\n\n\t\t\tif ( arrowFunction && arrowFunction.depth > lexicalBoundary.depth ) {\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\n\t\t\tif ( loop && loop.depth > lexicalBoundary.depth ) {\n\t\t\t\tthis.alias = lexicalBoundary.getThisAlias();\n\t\t\t}\n\t\t}\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( this.alias ) {\n\t\t\tcode.overwrite( this.start, this.end, this.alias, true );\n\t\t}\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class UpdateExpression extends Node {\n\tinitialise ( transforms ) {\n\t\tif ( this.argument.type === 'Identifier' ) {\n\t\t\tconst declaration = this.findScope( false ).findDeclaration( this.argument.name );\n\t\t\tif ( declaration && declaration.kind === 'const' ) {\n\t\t\t\tthrow new CompileError( this, `${this.argument.name} is read-only` );\n\t\t\t}\n\t\t}\n\n\t\tsuper.initialise( transforms );\n\t}\n}\n","import Node from '../Node.js';\n\nexport default class VariableDeclaration extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.scope = this.findScope( this.kind === 'var' );\n\t\tthis.declarations.forEach( declarator => declarator.initialise( transforms ) );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.letConst && this.kind !== 'var' ) {\n\t\t\tcode.overwrite( this.start, this.start + this.kind.length, 'var', true );\n\t\t}\n\n\t\tthis.declarations.forEach( declarator => declarator.transpile( code, transforms ) );\n\t}\n}\n","import Node from '../Node.js';\nimport CompileError from '../../utils/CompileError.js';\n\nexport default class VariableDeclarator extends Node {\n\tinitialise ( transforms ) {\n\t\tthis.isObjectPattern = this.id.type === 'ObjectPattern';\n\n\t\t// disallow compound destructuring, for now at least\n\t\tif ( /Pattern/.test( this.id.type ) ) {\n\t\t\tthis.id[ this.isObjectPattern ? 'properties' : 'elements' ].forEach( node => {\n\t\t\t\tif ( node && /Pattern/.test( this.isObjectPattern ? node.value.type : node.type ) ) {\n\t\t\t\t\tthrow new CompileError( node.value, 'Compound destructuring is not supported' );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet kind = this.parent.kind;\n\t\tif ( kind === 'let' && this.parent.parent.type === 'ForStatement' ) {\n\t\t\tkind = 'for.let'; // special case...\n\t\t}\n\n\t\tthis.parent.scope.addDeclaration( this.id, kind );\n\t\tsuper.initialise( transforms );\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tif ( transforms.destructuring && this.id.type !== 'Identifier' ) {\n\t\t\tconst simple = this.init.type === 'Identifier';\n\t\t\tconst name = simple ? this.init.name : this.findScope( true ).createIdentifier( 'ref' );\n\n\t\t\tif ( !simple ) {\n\t\t\t\tcode.insert( this.start, `${name} = ` );\n\t\t\t\tcode.move( this.init.start, this.init.end, this.start );\n\t\t\t\tcode.insert( this.start, `, ` );\n\t\t\t} else {\n\t\t\t\tcode.remove( this.init.start, this.init.end );\n\t\t\t}\n\n\t\t\tconst props = this.isObjectPattern ? this.id.properties : this.id.elements;\n\n\t\t\tcode.remove( this.start, props[0].start );\n\n\t\t\tlet lastIndex = this.start;\n\t\t\tlet first = true;\n\n\t\t\tprops.forEach( ( property, i ) => {\n\t\t\t\tif ( property ) {\n\t\t\t\t\tconst id = this.isObjectPattern ? property.value : property;\n\t\t\t\t\tconst rhs = this.isObjectPattern ? `${name}.${property.key.name}` : `${name}[${i}]`;\n\n\t\t\t\t\tcode.overwrite( lastIndex, id.start, `${first ? '' : ', '}` );\n\t\t\t\t\tcode.insert( id.end, ` = ${rhs}` );\n\n\t\t\t\t\tlastIndex = property.end;\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcode.remove( lastIndex, this.init.start );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import ArrayExpression from './ArrayExpression.js';\nimport ArrowFunctionExpression from './ArrowFunctionExpression.js';\nimport AssignmentExpression from './AssignmentExpression.js';\nimport BinaryExpression from './BinaryExpression.js';\nimport BreakStatement from './BreakStatement.js';\nimport CallExpression from './CallExpression.js';\nimport ClassBody from './ClassBody.js';\nimport ClassDeclaration from './ClassDeclaration.js';\nimport ClassExpression from './ClassExpression.js';\nimport ContinueStatement from './ContinueStatement.js';\nimport ExportDefaultDeclaration from './ExportDefaultDeclaration.js';\nimport ExportNamedDeclaration from './ExportNamedDeclaration.js';\nimport ForStatement from './ForStatement.js';\nimport ForInStatement from './ForInStatement.js';\nimport ForOfStatement from './ForOfStatement.js';\nimport FunctionDeclaration from './FunctionDeclaration.js';\nimport FunctionExpression from './FunctionExpression.js';\nimport Identifier from './Identifier.js';\nimport ImportDeclaration from './ImportDeclaration.js';\nimport ImportDefaultSpecifier from './ImportDefaultSpecifier.js';\nimport ImportSpecifier from './ImportSpecifier.js';\nimport Literal from './Literal.js';\nimport LoopStatement from './shared/LoopStatement.js';\nimport MemberExpression from './MemberExpression.js';\nimport Property from './Property.js';\nimport ReturnStatement from './ReturnStatement.js';\nimport Super from './Super.js';\nimport TaggedTemplateExpression from './TaggedTemplateExpression.js';\nimport TemplateElement from './TemplateElement.js';\nimport TemplateLiteral from './TemplateLiteral.js';\nimport ThisExpression from './ThisExpression.js';\nimport UpdateExpression from './UpdateExpression.js';\nimport VariableDeclaration from './VariableDeclaration.js';\nimport VariableDeclarator from './VariableDeclarator.js';\n\nexport default {\n\tArrayExpression,\n\tArrowFunctionExpression,\n\tAssignmentExpression,\n\tBinaryExpression,\n\tBreakStatement,\n\tCallExpression,\n\tClassBody,\n\tClassDeclaration,\n\tClassExpression,\n\tContinueStatement,\n\tDoWhileStatement: LoopStatement,\n\tExportNamedDeclaration,\n\tExportDefaultDeclaration,\n\tForStatement,\n\tForInStatement,\n\tForOfStatement,\n\tFunctionDeclaration,\n\tFunctionExpression,\n\tIdentifier,\n\tImportDeclaration,\n\tImportDefaultSpecifier,\n\tImportSpecifier,\n\tLiteral,\n\tMemberExpression,\n\tProperty,\n\tReturnStatement,\n\tSuper,\n\tTaggedTemplateExpression,\n\tTemplateElement,\n\tTemplateLiteral,\n\tThisExpression,\n\tUpdateExpression,\n\tVariableDeclaration,\n\tVariableDeclarator,\n\tWhileStatement: LoopStatement\n};\n","import types from './types/index.js';\nimport BlockStatement from './BlockStatement.js';\nimport Node from './Node.js';\n\nexport default function wrap ( raw, parent ) {\n\tif ( Array.isArray( raw ) ) {\n\t\treturn raw.map( value => wrap( value, parent ) );\n\t}\n\n\tif ( raw && typeof raw === 'object' ) {\n\t\tif ( raw.type === 'BlockStatement' ) return new BlockStatement( raw, parent );\n\n\t\tconst Constructor = types[ raw.type ] || Node;\n\t\treturn new Constructor( raw, parent );\n\t}\n\n\treturn raw; // scalar value\n}\n","import extractNames from './extractNames.js';\nimport reserved from '../utils/reserved.js';\nimport CompileError from '../utils/CompileError.js';\n\nconst letConst = /^(?:let|const)$/;\n\nexport default function Scope ( options ) {\n\toptions = options || {};\n\n\tthis.parent = options.parent;\n\tthis.isBlockScope = !!options.block;\n\n\tlet scope = this;\n\twhile ( scope.isBlockScope ) scope = scope.parent;\n\tthis.functionScope = scope;\n\n\tthis.declarations = Object.create( null );\n\tthis.references = Object.create( null );\n\tthis.blockScopedDeclarations = this.isBlockScope ? null : Object.create( null );\n\tthis.aliases = this.isBlockScope ? null : Object.create( null );\n}\n\nScope.prototype = {\n\taddDeclaration ( node, kind ) {\n\t\tfor ( const name of extractNames( node ) ) {\n\t\t\tconst existingDeclaration = this.declarations[ name ];\n\t\t\tif ( existingDeclaration && ( letConst.test( kind ) || letConst.test( existingDeclaration.kind ) ) ) {\n\t\t\t\t// TODO warn about double var declarations?\n\t\t\t\tthrow new CompileError( node, `${name} is already declared` );\n\t\t\t}\n\n\t\t\tconst declaration = { name, node, kind, instances: [] };\n\t\t\tthis.declarations[ name ] = declaration;\n\n\t\t\tif ( this.isBlockScope ) {\n\t\t\t\tif ( !this.functionScope.blockScopedDeclarations[ name ] ) this.functionScope.blockScopedDeclarations[ name ] = [];\n\t\t\t\tthis.functionScope.blockScopedDeclarations[ name ].push( declaration );\n\t\t\t}\n\t\t}\n\t},\n\n\taddReference ( identifier ) {\n\t\tconst declaration = this.declarations[ identifier.name ];\n\t\tif ( declaration ) {\n\t\t\tdeclaration.instances.push( identifier );\n\t\t} else {\n\t\t\tthis.references[ identifier.name ] = true;\n\t\t\tif ( this.parent ) this.parent.addReference( identifier );\n\t\t}\n\t},\n\n\tcontains ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent ? this.parent.contains( name ) : false );\n\t},\n\n\tcreateIdentifier ( base ) {\n\t\tlet name = base;\n\t\tlet counter = 1;\n\n\t\twhile ( this.declarations[ name ] || this.references[ name ] || this.aliases[ name ] || name in reserved ) {\n\t\t\tname = `${base}$${counter++}`;\n\t\t}\n\n\t\tthis.aliases[ name ] = true;\n\t\treturn name;\n\t},\n\n\tfindDeclaration ( name ) {\n\t\treturn this.declarations[ name ] ||\n\t\t       ( this.parent && this.parent.findDeclaration( name ) );\n\t}\n};\n","import wrap from './wrap.js';\nimport Node from './Node.js';\nimport Scope from './Scope.js';\nimport CompileError from '../utils/CompileError.js';\n\nexport default class BlockStatement extends Node {\n\tcreateScope () {\n\t\tthis.parentIsFunction = /Function/.test( this.parent.type );\n\t\tthis.isFunctionBlock = this.parentIsFunction || this.parent.type === 'Root';\n\t\tthis.scope = new Scope({\n\t\t\tblock: !this.isFunctionBlock,\n\t\t\tparent: this.parent.findScope( false )\n\t\t});\n\n\t\tif ( this.parentIsFunction ) {\n\t\t\tthis.parent.params.forEach( node => {\n\t\t\t\tthis.scope.addDeclaration( node, 'param' );\n\t\t\t});\n\t\t}\n\t}\n\n\tinitialise ( transforms ) {\n\t\tthis.thisAlias = null;\n\t\tthis.argumentsAlias = null;\n\t\tthis.defaultParameters = [];\n\n\t\t// normally the scope gets created here, during initialisation,\n\t\t// but in some cases (e.g. `for` statements), we need to create\n\t\t// the scope early, as it pertains to both the init block and\n\t\t// the body of the statement\n\t\tif ( !this.scope ) this.createScope();\n\n\t\tthis.body.forEach( node => node.initialise( transforms ) );\n\t}\n\n\tfindLexicalBoundary () {\n\t\tif ( this.type === 'Program' ) return this;\n\t\tif ( /^Function/.test( this.parent.type ) ) return this;\n\n\t\treturn this.parent.findLexicalBoundary();\n\t}\n\n\tfindScope ( functionScope ) {\n\t\tif ( functionScope && !this.isFunctionBlock ) return this.parent.findScope( functionScope );\n\t\treturn this.scope;\n\t}\n\n\tgetArgumentsAlias () {\n\t\tif ( !this.argumentsAlias ) {\n\t\t\tthis.argumentsAlias = this.scope.createIdentifier( 'arguments' );\n\t\t}\n\n\t\treturn this.argumentsAlias;\n\t}\n\n\tgetThisAlias () {\n\t\tif ( !this.thisAlias ) {\n\t\t\tthis.thisAlias = this.scope.createIdentifier( 'this' );\n\t\t}\n\n\t\treturn this.thisAlias;\n\t}\n\n\ttranspile ( code, transforms ) {\n\t\tconst start = this.body[0] ? this.body[0].start : this.start + 1;\n\n\t\tconst indentation = this.synthetic ?\n\t\t\tthis.getIndentation() + code.getIndentString() :\n\t\t\t( this.body.length ? this.body[0].getIndentation() : '' );\n\n\t\tlet addedStuff = false;\n\n\t\tif ( this.argumentsAlias ) {\n\t\t\tconst assignment = `var ${this.argumentsAlias} = arguments;`;\n\t\t\tcode.insert( start, assignment );\n\t\t\taddedStuff = true;\n\t\t}\n\n\t\tif ( this.thisAlias ) {\n\t\t\tif ( addedStuff ) code.insert( start, `\\n${indentation}` );\n\t\t\tconst assignment = `var ${this.thisAlias} = this;`;\n\t\t\tcode.insert( start, assignment );\n\t\t\taddedStuff = true;\n\t\t}\n\n\t\tif ( /Function/.test( this.parent.type ) ) {\n\t\t\tconst params = this.parent.params;\n\n\t\t\t// default parameters\n\t\t\tif ( transforms.defaultParameter ) {\n\t\t\t\tparams.filter( param => param.type === 'AssignmentPattern' ).forEach( param => {\n\t\t\t\t\tif ( addedStuff ) code.insert( start, `\\n${indentation}` );\n\n\t\t\t\t\tconst lhs = `if ( ${param.left.name} === void 0 ) ${param.left.name}`;\n\t\t\t\t\tcode\n\t\t\t\t\t\t.insert( start, `${lhs}` )\n\t\t\t\t\t\t.move( param.left.end, param.right.end, start )\n\t\t\t\t\t\t.insert( start, `;` );\n\n\t\t\t\t\taddedStuff = true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// object pattern\n\t\t\tif ( transforms.parameterDestructuring ) {\n\t\t\t\tparams.filter( param => param.type === 'ObjectPattern' ).forEach( param => {\n\t\t\t\t\tconst ref = this.scope.createIdentifier( 'ref' );\n\t\t\t\t\tcode.insert( param.start, ref );\n\n\t\t\t\t\tlet lastIndex = param.start;\n\n\t\t\t\t\tparam.properties.forEach( prop => {\n\t\t\t\t\t\tcode.remove( lastIndex, prop.value.start );\n\n\t\t\t\t\t\tif ( addedStuff ) code.insert( start, `\\n${indentation}` );\n\n\t\t\t\t\t\tconst key = prop.key.name;\n\n\t\t\t\t\t\tif ( prop.value.type === 'Identifier' ) {\n\t\t\t\t\t\t\tcode.remove( prop.value.start, prop.value.end );\n\t\t\t\t\t\t\tlastIndex = prop.value.end;\n\n\t\t\t\t\t\t\tconst value = prop.value.name;\n\t\t\t\t\t\t\tcode.insert( start, `var ${value} = ${ref}.${key};` );\n\t\t\t\t\t\t} else if ( prop.value.type === 'AssignmentPattern' ) {\n\t\t\t\t\t\t\tcode.remove( prop.value.start, prop.value.right.start );\n\t\t\t\t\t\t\tlastIndex = prop.value.right.end;\n\n\t\t\t\t\t\t\tconst value = prop.value.left.name;\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\t.insert( start, `var ${ref}_${key} = ${ref}.${key}, ${value} = ${ref}_${key} === void 0 ? ` )\n\t\t\t\t\t\t\t\t.move( prop.value.right.start, prop.value.right.end, start )\n\t\t\t\t\t\t\t\t.insert( start, ` : ${ref}_${key};` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow new CompileError( prop, `Compound destructuring is not supported` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddedStuff = true;\n\t\t\t\t\t\tlastIndex = prop.end;\n\t\t\t\t\t});\n\n\t\t\t\t\tcode.remove( lastIndex, param.end );\n\t\t\t\t});\n\n\t\t\t\t// array pattern. TODO dry this out\n\t\t\t\tparams.filter( param => param.type === 'ArrayPattern' ).forEach( param => {\n\t\t\t\t\tconst ref = this.scope.createIdentifier( 'ref' );\n\t\t\t\t\tcode.insert( param.start, ref );\n\n\t\t\t\t\tlet lastIndex = param.start;\n\n\t\t\t\t\tparam.elements.forEach( ( element, i ) => {\n\t\t\t\t\t\tcode.remove( lastIndex, element.start );\n\n\t\t\t\t\t\tif ( addedStuff ) code.insert( start, `\\n${indentation}` );\n\n\t\t\t\t\t\tif ( element.type === 'Identifier' ) {\n\t\t\t\t\t\t\tcode.remove( element.start, element.end );\n\t\t\t\t\t\t\tlastIndex = element.end;\n\n\t\t\t\t\t\t\tcode.insert( start, `var ${element.name} = ${ref}[${i}];` );\n\t\t\t\t\t\t} else if ( element.type === 'AssignmentPattern' ) {\n\t\t\t\t\t\t\tcode.remove( element.start, element.right.start );\n\t\t\t\t\t\t\tlastIndex = element.right.end;\n\n\t\t\t\t\t\t\tconst name = element.left.name;\n\t\t\t\t\t\t\tcode\n\t\t\t\t\t\t\t\t.insert( start, `var ${ref}_${i} = ref[${i}], ${name} = ref_${i} === void 0 ? ` )\n\t\t\t\t\t\t\t\t.move( element.right.start, element.right.end, start )\n\t\t\t\t\t\t\t\t.insert( start, ` : ref_${i};` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow new CompileError( element, `Compound destructuring is not supported` );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taddedStuff = true;\n\t\t\t\t\t\tlastIndex = element.end;\n\t\t\t\t\t});\n\n\t\t\t\t\tcode.remove( lastIndex, param.end );\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// rest parameter\n\t\t\tif ( transforms.spreadRest ) {\n\t\t\t\tconst lastParam = params[ params.length - 1 ];\n\t\t\t\tif ( lastParam && lastParam.type === 'RestElement' ) {\n\t\t\t\t\tconst penultimateParam = params[ params.length - 2 ];\n\n\t\t\t\t\tif ( penultimateParam ) {\n\t\t\t\t\t\tcode.remove( penultimateParam ? penultimateParam.end : lastParam.start, lastParam.end );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet start = lastParam.start, end = lastParam.end; // TODO https://gitlab.com/Rich-Harris/buble/issues/8\n\n\t\t\t\t\t\twhile ( /\\s/.test( code.original[ start - 1 ] ) ) start -= 1;\n\t\t\t\t\t\twhile ( /\\s/.test( code.original[ end ] ) ) end += 1;\n\n\t\t\t\t\t\tcode.remove( start, end );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( addedStuff ) code.insert( start, `\\n${indentation}` );\n\n\t\t\t\t\tconst name = lastParam.argument.name;\n\t\t\t\t\tconst len = this.scope.createIdentifier( 'len' );\n\t\t\t\t\tconst count = params.length - 1;\n\n\t\t\t\t\tif ( count ) {\n\t\t\t\t\t\tcode.insert( start, `var ${name} = [], ${len} = arguments.length - ${count};\\n${indentation}while ( ${len}-- > 0 ) ${name}[ ${len} ] = arguments[ ${len} + ${count} ];` );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcode.insert( start, `var ${name} = [], ${len} = arguments.length;\\n${indentation}while ( ${len}-- ) ${name}[ ${len} ] = arguments[ ${len} ];` );\n\t\t\t\t\t}\n\n\t\t\t\t\taddedStuff = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( addedStuff ) {\n\t\t\tcode.insert( start, `\\n\\n${indentation}` );\n\t\t}\n\n\t\tif ( transforms.letConst && this.isFunctionBlock ) {\n\t\t\tObject.keys( this.scope.blockScopedDeclarations ).forEach( name => {\n\t\t\t\tconst declarations = this.scope.blockScopedDeclarations[ name ];\n\n\t\t\t\tfor ( let i = 0; i < declarations.length; i += 1 ) {\n\t\t\t\t\tconst declaration = declarations[i];\n\t\t\t\t\tlet cont = false; // TODO implement proper continue...\n\n\t\t\t\t\tif ( declaration.kind === 'for.let' ) {\n\t\t\t\t\t\t// special case\n\t\t\t\t\t\tconst forStatement = declaration.node.findNearest( 'ForStatement' );\n\n\t\t\t\t\t\tif ( forStatement.shouldRewriteAsFunction ) {\n\t\t\t\t\t\t\tconst outerAlias = this.scope.createIdentifier( name );\n\t\t\t\t\t\t\tconst innerAlias = forStatement.reassigned[ name ] ?\n\t\t\t\t\t\t\t\tthis.scope.createIdentifier( name ) :\n\t\t\t\t\t\t\t\tname;\n\n\t\t\t\t\t\t\tdeclaration.name = outerAlias;\n\n\t\t\t\t\t\t\tforStatement.aliases[ name ] = {\n\t\t\t\t\t\t\t\touter: outerAlias,\n\t\t\t\t\t\t\t\tinner: innerAlias\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\n\t\t\t\t\t\t\t\tconst alias = forStatement.body.contains( identifier ) ?\n\t\t\t\t\t\t\t\t\tinnerAlias :\n\t\t\t\t\t\t\t\t\touterAlias;\n\n\t\t\t\t\t\t\t\tif ( name !== alias ) {\n\t\t\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcont = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !cont ) {\n\t\t\t\t\t\tconst alias = this.scope.createIdentifier( name );\n\n\t\t\t\t\t\tif ( name !== alias ) {\n\t\t\t\t\t\t\tdeclaration.name = alias;\n\n\t\t\t\t\t\t\tfor ( const identifier of declaration.instances ) {\n\t\t\t\t\t\t\t\tcode.overwrite( identifier.start, identifier.end, alias, true );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif ( this.synthetic && this.parent.type === 'ArrowFunctionExpression' ) {\n\t\t\tcode.insert( this.body[0].start, 'return ' );\n\t\t}\n\n\t\tsuper.transpile( code, transforms );\n\t}\n}\n","import MagicString from 'magic-string';\nimport BlockStatement from './BlockStatement.js';\n\nexport default function Program ( source, ast, transforms ) {\n\tthis.type = 'Root';\n\n\tthis.source = source;\n\tthis.magicString = new MagicString( source );\n\n\tthis.ast = ast;\n\tthis.depth = 0;\n\n\tthis.body = new BlockStatement( ast, this );\n\n\tthis.templateElements = [];\n\tthis.body.initialise( transforms );\n\n\tthis.indentExclusions = {};\n\tfor ( const node of this.templateElements ) {\n\t\tfor ( let i = node.start; i < node.end; i += 1 ) {\n\t\t\tthis.indentExclusions[ node.start + i ] = true;\n\t\t}\n\t}\n\n\tthis.body.transpile( this.magicString, transforms );\n}\n\nProgram.prototype = {\n\texport ( options = {} ) {\n\t\treturn {\n\t\t\tcode: this.magicString.toString(),\n\t\t\tmap: this.magicString.generateMap({\n\t\t\t\tfile: options.file,\n\t\t\t\tsource: options.source,\n\t\t\t\tincludeContent: options.includeContent !== false\n\t\t\t})\n\t\t};\n\t},\n\n\tfindNearest () {\n\t\treturn null;\n\t},\n\n\tfindScope () {\n\t\treturn null;\n\t}\n};\n","export const matrix = {\n\tchrome: {\n\t\t    48: 0b1001111011111100111110101111101,\n\t\t    49: 0b1001111111111100111111111111111,\n\t\t    50: 0b1011111111111100111111111111111\n\t},\n\tfirefox: {\n\t\t    43: 0b1000111111101100000110111011101,\n\t\t    44: 0b1000111111101100000110111011101,\n\t\t    45: 0b1000111111101100000110111011101\n\t},\n\tsafari: {\n\t\t     8: 0b1000000000000000000000000000000,\n\t\t     9: 0b1001111001101100000011101011110\n\t},\n\tie: {\n\t\t     8: 0b0000000000000000000000000000000,\n\t\t     9: 0b1000000000000000000000000000000,\n\t\t    10: 0b1000000000000000000000000000000,\n\t\t    11: 0b1000000000000000111000001100000\n\t},\n\tedge: {\n\t\t    12: 0b1011110110111100011010001011101,\n\t\t    13: 0b1011111110111100011111001011111\n\t},\n\tnode: {\n\t\t'0.10': 0b1000000000101000000000001000000,\n\t\t'0.12': 0b1000001000101000000010001000100,\n\t\t     4: 0b1001111000111100111111001111111,\n\t\t     5: 0b1001111000111100111111001111111\n\t}\n};\n\nexport const features = [\n\t'arrow',\n\t'classes',\n\t'collections',\n\t'computedProperty',\n\t'conciseMethodProperty',\n\t'constLoop',\n\t'constRedef',\n\t'defaultParameter',\n\t'destructuring',\n\t'extendNatives',\n\t'forOf',\n\t'generator',\n\t'letConst',\n\t'letLoop',\n\t'letLoopScope',\n\t'moduleExport',\n\t'moduleImport',\n\t'numericLiteral',\n\t'objectProto',\n\t'objectSuper',\n\t'oldOctalLiteral',\n\t'parameterDestructuring',\n\t'spreadRest',\n\t'stickyRegExp',\n\t'symbol',\n\t'templateString',\n\t'unicodeEscape',\n\t'unicodeIdentifier',\n\t'unicodeRegExp',\n\n\t// ES2016\n\t'exponentiation',\n\n\t// additional transforms, not from\n\t// https://featuretests.io\n\t'reservedProperties'\n];\n","{\n  \"name\": \"buble\",\n  \"version\": \"0.5.8\",\n  \"description\": \"The blazing fast, batteries-included ES2015 compiler\",\n  \"main\": \"dist/buble.umd.js\",\n  \"jsnext:main\": \"dist/buble.es.js\",\n  \"files\": [\n    \"bin\",\n    \"src\",\n    \"dist\",\n    \"register.js\",\n    \"README.md\"\n  ],\n  \"scripts\": {\n    \"build\": \"npm run build:umd && npm run build:es && npm run build:browser\",\n    \"build:umd\": \"rollup -c -f umd -o dist/buble.umd.js\",\n    \"build:browser\": \"rollup -c --environment DEPS -f umd -o dist/buble.deps.js\",\n    \"build:es\": \"rollup -c -f es6 -o dist/buble.es.js\",\n    \"test\": \"mocha test/test.js --compilers js:buble/register\",\n    \"pretest\": \"npm run build:umd\",\n    \"prepublish\": \"npm test && npm run build:es && npm run build:browser\"\n  },\n  \"bin\": {\n    \"buble\": \"./bin/buble\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://gitlab.com/Rich-Harris/buble.git\"\n  },\n  \"keywords\": [\n    \"javascript\",\n    \"transpilation\",\n    \"compilation\",\n    \"esnext\",\n    \"es2015\",\n    \"es2017\",\n    \"es6\",\n    \"es7\"\n  ],\n  \"author\": \"Rich Harris\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://gitlab.com/Rich-Harris/buble/issues\"\n  },\n  \"homepage\": \"https://gitlab.com/Rich-Harris/buble#README\",\n  \"devDependencies\": {\n    \"buble\": \"0.5.6\",\n    \"eslint\": \"^2.6.0\",\n    \"glob\": \"^7.0.3\",\n    \"mocha\": \"^2.4.5\",\n    \"rimraf\": \"^2.5.2\",\n    \"rollup\": \"^0.25.8\",\n    \"rollup-plugin-buble\": \"^0.5.0\",\n    \"rollup-plugin-json\": \"^2.0.0\",\n    \"rollup-plugin-node-resolve\": \"^1.5.0\",\n    \"source-map\": \"^0.5.3\",\n    \"source-map-support\": \"^0.4.0\"\n  },\n  \"dependencies\": {\n    \"acorn\": \"^3.0.4\",\n    \"chalk\": \"^1.1.3\",\n    \"magic-string\": \"^0.11.2\",\n    \"minimist\": \"^1.2.0\"\n  }\n}\n","import { parse } from 'acorn';\nimport Program from './program/Program.js';\nimport { features, matrix } from './support.js';\nimport getSnippet from './utils/getSnippet.js';\n\nconst dangerousTransforms = [\n\t'dangerousTaggedTemplateString',\n\t'dangerousForOf'\n];\n\nexport function target ( target ) {\n\tconst targets = Object.keys( target );\n\tlet bitmask = targets.length ?\n\t\t0b1111111111111111111111111111111 :\n\t\t0b1000000000000000000000000000000;\n\n\tObject.keys( target ).forEach( environment => {\n\t\tconst versions = matrix[ environment ];\n\t\tif ( !versions ) throw new Error( `Unknown environment '${environment}'. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\n\n\t\tconst targetVersion = target[ environment ];\n\t\tif ( !( targetVersion in versions ) ) throw new Error( `Support data exists for the following versions of ${environment}: ${Object.keys( versions ).join( ', ')}. Please raise an issue at https://gitlab.com/Rich-Harris/buble/issues` );\n\t\tconst support = versions[ targetVersion ];\n\n\t\tbitmask &= support;\n\t});\n\n\tlet transforms = Object.create( null );\n\tfeatures.forEach( ( name, i ) => {\n\t\ttransforms[ name ] = !( bitmask & 1 << i );\n\t});\n\n\tdangerousTransforms.forEach( name => {\n\t\ttransforms[ name ] = false;\n\t});\n\n\treturn transforms;\n}\n\nexport function transform ( source, options = {} ) {\n\tlet ast;\n\n\ttry {\n\t\tast = parse( source, {\n\t\t\tecmaVersion: 7,\n\t\t\tpreserveParens: true,\n\t\t\tsourceType: 'module'\n\t\t});\n\t} catch ( err ) {\n\t\terr.snippet = getSnippet( source, err.loc );\n\t\tthrow err;\n\t}\n\n\tlet transforms = target( options.target || {} );\n\tObject.keys( options.transforms || {} ).forEach( name => {\n\t\tif ( name === 'modules' ) {\n\t\t\tif ( !( 'moduleImport' in options.transforms ) ) transforms.moduleImport = options.transforms.modules;\n\t\t\tif ( !( 'moduleExport' in options.transforms ) ) transforms.moduleExport = options.transforms.modules;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( !( name in transforms ) ) throw new Error( `Unknown transform '${name}'` );\n\t\ttransforms[ name ] = options.transforms[ name ];\n\t});\n\n\treturn new Program( source, ast, transforms ).export( options );\n}\n\nexport { version as VERSION } from '../package.json';\n"],"names":["const","let","types","keywords","pp","this","init","i","node","empty","Node","super","findIndex","assignment","value","start","alias","identifier","0b1001111011111100111110101111101","0b1001111111111100111111111111111","0b1011111111111100111111111111111","0b1000111111101100000110111011101","0b1000000000000000000000000000000","0b1001111001101100000011101011110","0b0000000000000000000000000000000","0b1000000000000000111000001100000","0b1011110110111100011010001011101","0b1011111110111100011111001011111","0b1000000000101000000000001000000","0b1000001000101000000010001000100","0b1001111000111100111111001111111","0b1111111111111111111111111111111"],"mappings":";;;;;;EAAA;;AAEA,EAAOA,IAAM,aAAa,GAAG;IAC3B,CAAC,EAAE,qNAAqN;IACxN,CAAC,EAAE,8CAA8C;IACjD,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,MAAM;IACT,MAAM,EAAE,wEAAwE;IAChF,UAAU,EAAE,gBAAgB;GAC7B;;;;AAID,EAAA,IAAI,oBAAoB,GAAG,6KAA6K;;AAExM,EAAOA,IAAM,QAAQ,GAAG;IACtB,CAAC,EAAE,oBAAoB;IACvB,CAAC,EAAE,oBAAoB,GAAG,0CAA0C;GACrE;;;;;;;;;;AAUDC,EAAAA,IAAI,4BAA4B,GAAG,woIAAwoI;AAC3qIA,EAAAA,IAAI,uBAAuB,GAAG,kgFAAkgF;;AAEhiFD,EAAAA,IAAM,uBAAuB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,GAAG,CAAC;AACpFA,EAAAA,IAAM,kBAAkB,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,4BAA4B,GAAG,uBAAuB,GAAG,GAAG,CAAC;;AAEzG,EAAA,4BAA4B,GAAG,uBAAuB,GAAG,IAAI;;;;;;;AAO7DA,EAAAA,IAAM,0BAA0B,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACz9BA,EAAAA,IAAM,qBAAqB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CA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"}